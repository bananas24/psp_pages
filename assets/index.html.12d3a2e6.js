import{_ as e,o as a,c as s,f as o}from"./app.d2090560.js";const i={},r=o('<h1 id="tema-5-servicios-en-red" tabindex="-1">Tema 5. Servicios en red</h1><p>Los servicios son programas auxiliares utilizados en un sistema para gestionar una colecci\xF3n de recursos y prestar su funcionalidad a los usuario y aplicaciones.</p><p>El acceso a los servicios est\xE1 formado por el conjunto de operaciones que ofrece, por ejemplo, un servicio de archivos ofrece operaciones de lectura, escritura y borrado de ficheros.</p><p>Todos los servicios de Internet implementan una relaci\xF3n cliente-servidor. Existen multitud de librer\xEDas para trabajar con los servicios m\xE1s comunes. En esta unidad nos vamos a centrar en el servicio FTP y SMTP (env\xEDo de emails).</p><p>Adem\xE1s, hay otras aproximaciones, tambi\xE9n basadas en la arquitectura cliente-servidor que permiten ofrecer acceso a los sistemas. Entre los m\xE1s utilizados, est\xE1 lo que se denomina API Rest, que no deja de ser un servicio sobre HTTP que permite interactuar con el backend de los sistemas, de forma independiente a la arquitectura y lenguajes utilizados en el frontend.</p><p>Nosotros vamos a analizar en esta unidad otras aproximaciones como los sistemas de colas, basados en el protocolo MQ, o los sistemas serverless que ofrecen las principales plataformas de computaci\xF3n en la nube (Azure Functions, AWS Lambda y Google Cloud Functions).</p><h2 id="objetivos" tabindex="-1">Objetivos</h2><p>Objetivos de esta unidad:</p><ul><li>Utilizar librer\xEDas Java para usar los protocolos de aplicaci\xF3n m\xE1s importantes de TCP/IP.</li><li>Probar servicios de comunicaci\xF3n en red.</li><li>Permitir operaciones en la nube de forma sencilla.</li><li>Crear aplicaciones que permitan una comunicaci\xF3n as\xEDncrona entre clientes y entre clientes y servidores.</li></ul>',9),n=[r];function c(t,l){return a(),s("div",null,n)}const u=e(i,[["render",c],["__file","index.html.vue"]]);export{u as default};
