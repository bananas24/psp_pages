import{_ as e,o,c as a,f as r}from"./app.0690cf7d.js";const s={},n=r('<h1 id="tema-2-programacion-de-procesos" tabindex="-1">Tema 2. Programaci\xF3n de procesos</h1><p>Una vez hemos aprendido a diferenciar entre programas, procesos e hilos, en este segundo tema vamos a aprender c\xF3mo desde un programa creado por nosotros podemos lanzar otros programas, es decir, desde un proceso en ejecuci\xF3n, podemos crear otro proceso.</p><p>Adem\xE1s de lanzarlos, al establecerse una relaci\xF3n padre-hijo estos procesos pueden comunicarse entre s\xED intercambiando informaci\xF3n. De esta forma nuestros programas podr\xE1n lanzar otras aplicaciones, comandos del SO e incluso otras aplicaciones nuestras, permitiendo cierto grado de sincronizaci\xF3n y comunicaci\xF3n entre ellas.</p><h2 id="objetivos" tabindex="-1">Objetivos</h2><p>Los objetivos que alcanzaremos tras esta unidad son:</p><ul><li>Conocer las clases de Java para la creaci\xF3n de procesos</li><li>Monitorizar y controlar el ciclo de vida de un proceso</li><li>Controlar la comunicaci\xF3n entre procesos padre/hijo</li><li>Usar m\xE9todos para la sincronizaci\xF3n entre procesos y subprocesos</li><li>Entender el mecanismo de comunicaci\xF3n mediante tuber\xEDas (pipes)</li><li>Aprender la sintaxis y uso del comando curl para probar API REST desde un programa</li><li>Crear programas que ejecuten tareas en paralelo.</li></ul>',6),i=[n];function c(t,d){return o(),a("div",null,i)}const p=e(s,[["render",c],["__file","index.html.vue"]]);export{p as default};
