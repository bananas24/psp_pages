import{_ as c,r as t,o as l,c as i,d as n,a,f as o,b as s}from"./app.108f91ed.js";const u={},d=o('<h1 id="_2-4-anexo-i-curl" tabindex="-1">2.4 Anexo I - Curl</h1><p>Curl est\xE1 dise\xF1ado para funcionar como una forma de verificar la conectividad a las URL y como una gran herramienta para transferir datos. Tiene especial relevancia e inter\xE9s cunado se trata de usar servicios basados en API REST, tanto para comprobar su funcionamiento durante la fase de pruebas o bien para cuando el sistema ya est\xE1 en producci\xF3n.</p><p>Curl es una herramienta de l\xEDnea de comandos que nos permite hacer peticiones HTTP desde la consola. Su principal uso es obtener una respuesta de un sitio web (pro ejemplo, para saber que no est\xE1 ca\xEDdo) o para comprobar tiempos de respuesta.</p><p>::: info curl means ... La herramienta fu\xE9 pensada para subir y descargar informaci\xF3n usando una URL. Es una aplicaci\xF3n cliente (de ah\xED la &#39;c&#39;), y a su vez es un cliente de URLs. Por lo tanto, &#39;c&#39; de cliente y URL: cURL.</p><p>En ingl\xE9s &quot;curl&quot; se pronuncia con un sonido inicial /k/, rimando con la pronunciaci\xF3n de la palabra girl.</p><p>Por el contrario, si lo deletreamos como c-URL, entonces us significado tambi\xE9n adquiere un sentido l\xF3gico, ver-URL (see-URL), lo cual tambi\xE9n es una buena definici\xF3n de la utilidad de esta herramienta. :::</p><p>Curl funciona con protocolos que permiten la transferencia de datos en una o dos direcciones. Soporta protocolos basados en una &quot;URI&quot; y que est\xE9n descritos en una RFC, por lo que curl funciona principalmente con URLs (URIs en realidad) como el origen y/o destino de las transferencias e intercambios de informaci\xF3n que realiza.</p><p>Actualmente curl ofrece soporte para los siguiente protocolos:</p><blockquote><p>DICT, FILE, FTP, FTPS, GOPHER, GOPHERS, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, MQTT, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET, TFTP.</p></blockquote><h2 id="_2-4-1-como-obtener-curl" tabindex="-1">2.4.1 C\xF3mo obtener curl</h2><p>curl es una utilidad libre, abierta y disponible en varios formatos. Podemos descargarla y configurarla en la mayor\xEDa de los sistemas operativos y arquitecturas hardware. Algunos SO ya la incluyen en sus distribuciones.</p>',11),k=s("La fuente principal de informaci\xF3n y descarga siempre deber\xEDa ser el "),m={href:"http://curl.se",target:"_blank",rel:"noopener noreferrer"},b=s("sitio oficial de CURL"),g=s(" donde podemos descargar, entre otros, los instaladores para nuestros sistemas."),h=a("li",null,[s("Linux (Ubuntu / Debian). curl viene instalado por defecto. De todas formas, podemos actualizarlo e instalarlo usando el gesto de paquetes APT "),a("blockquote",null,[a("p",null,"apt install curl")])],-1),q=s("Windows 10 viene con la herramienta curl instalada en sus sistemas desde la versi\xF3n 1804 "),v=s("podemos descargar e instalar la \xFAltima versi\xF3n oficial de curl para windows desde "),f={href:"http://curl.se/windows",target:"_blank",rel:"noopener noreferrer"},y=s("curl windows binaries"),T=a("li",null,[s("MacOS tambi\xE9n trae de serie la herramienta curl desde hace ya bastantes a\xF1os. Si necesitamos actualizar la versi\xF3n que tenemos en el sistema, se recomienda instalar homebrew (un gesto de paquetes para macOS) "),a("blockquote",null,[a("p",null,"brew install curl")])],-1),z=o(`<h2 id="_2-4-2-realizando-una-peticion-get" tabindex="-1">2.4.2 Realizando una petici\xF3n GET</h2><p>La sintaxis b\xE1sica de Curl se ve as\xED:</p><p>curl [OPTIONS] [URL] El uso m\xE1s simple de Curl es mostrar el contenido de una p\xE1gina. El siguiente comando mostrar\xE1 la p\xE1gina de inicio de testdomain.com.</p><blockquote><p>curl testdomain.com</p></blockquote><p>Esto generar\xE1 el c\xF3digo fuente completo de la p\xE1gina de inicio del dominio. Si no se especifica ning\xFAn protocolo, curl lo interpretar\xE1 a HTTP.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>$<span class="token operator">&gt;</span> <span class="token function">curl</span> http://www.net.net
<span class="token operator">&lt;</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Document Moved<span class="token operator">&lt;</span>/title<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span><span class="token operator">&lt;</span>h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>Object Moved<span class="token operator">&lt;</span>/h<span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>This document may be found <span class="token operator">&lt;</span>a <span class="token assign-left variable">HREF</span><span class="token operator">=</span><span class="token string">&quot;http://net.net&quot;</span><span class="token operator">&gt;</span>here<span class="token operator">&lt;</span>/a<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/body<span class="token operator">&gt;</span>

</code></pre><div class="highlight-lines"><div class="highlight-line">\xA0</div><br><br><br></div></div><p>Si no se indica lo contrario, curl realiza una solicitud HTTP con el m\xE9todo GET a la URL indicada. La salida del programa para el comando enviado ser\xE1 el cuerpo de la respuesta HTTP, en el caos anterior, el c\xF3digo HTML de la URL solicitada.</p><p>Si en vez de mostrar la salida recibida por pantalla nos interesa guardar la informaci\xF3n en un archivo, podemos usar el par\xE1metro <code>-o (--output)</code>:</p><blockquote><p>curl -o output.html www.net.net</p><p>// Es equivalente a hacer esto en el SO</p><p>curl www.net.net &gt; output.html</p></blockquote><p>Como hemos visto en la sintaxis, por norma general la URL debe ponerse al final del comando. Opcionalmente podemos especificar la URL en cualquier lugar del comando si usamos el modificador <code>-s (--silent)</code>, pudiendo as\xED alterar el orden de los argumentos de curl.</p><p>curl -s http://www.net.net -o output.html</p><p>En los ejemplos anteriores, el resultado que estamos obteniendo no es el deseado ya que el recurso se ha cambiado de ubicaci\xF3n o bien el sitio nos est\xE1 redirigiendo a otra URI. Si usamos el par\xE1metro <code>-L (--location)</code> podemos hacer que curl siga las redirecciones y obtenga el contenido final que buscamos.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>$<span class="token operator">&gt;</span> <span class="token function">curl</span> http://www.dataden.tech
Redirecting
$<span class="token operator">&gt;</span> <span class="token function">curl</span> <span class="token parameter variable">-L</span> http://www.dataden.tech
<span class="token operator">&lt;</span>html<span class="token operator">&gt;</span><span class="token operator">&lt;</span>head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>Loading<span class="token punctuation">..</span>.<span class="token operator">&lt;</span>/title<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/head<span class="token operator">&gt;</span><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">&#39;text/javascript&#39;</span><span class="token operator">&gt;</span>window.location.replace<span class="token punctuation">(</span><span class="token string">&#39;http://www.dataden.tech/?js=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJKb2tlbiIsImV4cCI6MTYzMzM4OTE3OSwiaWF0IjoxNjMzMzgxOTc5LCJpc3MiOiJKb2tlbiIsImpzIjoxLCJqdGkiOiIycWxmMGdkZmg2YWlzaHMxdjgwdWx0aTQiLCJuYmYiOjE2MzMzODE5NzksInRzIjoxNjMzMzgxOTc5NzgzNzQ1fQ.y5LwDoSoZCpe2tzro_FbX7cSGIw4nx1XweNBqjpLXoo&amp;sid=da601018-2557-11ec-a001-58f389072b17&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>/script<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/body<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/html<span class="token operator">&gt;</span>
$<span class="token operator">&gt;</span> <span class="token function">curl</span> <span class="token parameter variable">-L</span> http://www.net.net
<span class="token operator">&lt;</span>html<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>NET.NET <span class="token punctuation">[</span>The first domain name on the Internet<span class="token operator">!</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>/title<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>/head<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">!</span>-- Begin: Google Analytics --<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
                  <span class="token punctuation">(</span>function<span class="token punctuation">(</span>i,s,o,g,r,a,m<span class="token punctuation">)</span><span class="token punctuation">{</span>i<span class="token punctuation">[</span><span class="token string">&#39;GoogleAnalyticsObject&#39;</span><span class="token punctuation">]</span><span class="token operator">=</span>r<span class="token punctuation">;</span>i<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token operator">||</span><span class="token function-name function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                  <span class="token punctuation">(</span>i<span class="token punctuation">[</span>r<span class="token punctuation">]</span>.q<span class="token operator">=</span>i<span class="token punctuation">[</span>r<span class="token punctuation">]</span>.q<span class="token operator">||</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>.push<span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">}</span>,i<span class="token punctuation">[</span>r<span class="token punctuation">]</span>.l<span class="token operator">=</span><span class="token number">1</span>*new Date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token assign-left variable">a</span><span class="token operator">=</span>s.createElement<span class="token punctuation">(</span>o<span class="token punctuation">)</span>,
                  <span class="token assign-left variable">m</span><span class="token operator">=</span>s.getElementsByTagName<span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token assign-left variable">a.async</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token assign-left variable">a.src</span><span class="token operator">=</span>g<span class="token punctuation">;</span>m.parentNode.insertBefore<span class="token punctuation">(</span>a,m<span class="token punctuation">)</span>
                  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>window,document,<span class="token string">&#39;script&#39;</span>,<span class="token string">&#39;//www.google-analytics.com/analytics.js&#39;</span>,<span class="token string">&#39;ga&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                  ga<span class="token punctuation">(</span><span class="token string">&#39;create&#39;</span>, <span class="token string">&#39;UA-32196-28&#39;</span>, <span class="token string">&#39;auto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                  ga<span class="token punctuation">(</span><span class="token string">&#39;send&#39;</span>, <span class="token string">&#39;pageview&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token operator">&lt;</span>/script<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">!</span>-- End: Google Analytics --<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>center<span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span>br /<span class="token operator">&gt;</span><span class="token operator">&lt;</span>br /<span class="token operator">&gt;</span><span class="token operator">&lt;</span>br /<span class="token operator">&gt;</span><span class="token operator">&lt;</span>br /<span class="token operator">&gt;</span><span class="token operator">&lt;</span>br /<span class="token operator">&gt;</span><span class="token operator">&lt;</span>br /<span class="token operator">&gt;</span><span class="token operator">&lt;</span>br /<span class="token operator">&gt;</span><span class="token operator">&lt;</span>br /<span class="token operator">&gt;</span><span class="token operator">&lt;</span>br /<span class="token operator">&gt;</span><span class="token operator">&lt;</span>br /<span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span>font <span class="token assign-left variable">face</span><span class="token operator">=</span><span class="token string">&quot;impact, Arial, Helvetica, sans-serif&quot;</span> <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token string">&quot;14&quot;</span><span class="token operator">&gt;</span>
                                NET.NET
                        <span class="token operator">&lt;</span>/font<span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span>br /<span class="token operator">&gt;</span><span class="token operator">&lt;</span>br /<span class="token operator">&gt;</span><span class="token operator">&lt;</span>br /<span class="token operator">&gt;</span><span class="token operator">&lt;</span>br /<span class="token operator">&gt;</span>
                        <span class="token operator">&lt;</span>font <span class="token assign-left variable">face</span><span class="token operator">=</span><span class="token string">&quot;Arial, Helvetica, sans-serif&quot;</span> <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token operator">&gt;</span>
                                <span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">&quot;http://who.godaddy.com/whoischeck.aspx?domain=NET.NET&quot;</span> <span class="token assign-left variable">target</span><span class="token operator">=</span><span class="token string">&quot;_blank&quot;</span><span class="token operator">&gt;</span>NET.NET<span class="token operator">&lt;</span>/a<span class="token operator">&gt;</span> is the first and the best domain name on the Internet<span class="token operator">!</span>
                                <span class="token operator">&lt;</span>br /<span class="token operator">&gt;</span>
                                Coming Soon<span class="token punctuation">..</span>.
                        <span class="token operator">&lt;</span>/font<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>/center<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>/body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>/html<span class="token operator">&gt;</span>
</code></pre><div class="highlight-lines"><div class="highlight-line">\xA0</div><br><div class="highlight-line">\xA0</div><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div></div><p>De momento s\xF3lo hemos obtenido el HTML del recurso solicitado. Si queremos ver las cabeceras HTTP de nuestra solicitud y de la respuesta recibida podemos usar el par\xE1metro <code>-v (--verbose)</code> que mostrar\xE1 toda la informaci\xF3n que intercambia el protocolo HTTP..</p><div class="language-bash ext-sh"><pre class="language-bash"><code>$<span class="token operator">&gt;</span> <span class="token function">curl</span> <span class="token parameter variable">-v</span>  http://www.net.net
*   Trying <span class="token number">34.250</span>.90.28:80<span class="token punctuation">..</span>.
* TCP_NODELAY <span class="token builtin class-name">set</span>
* Connected to net.net <span class="token punctuation">(</span><span class="token number">34.250</span>.90.28<span class="token punctuation">)</span> port <span class="token number">80</span> <span class="token punctuation">(</span><span class="token comment">#0)</span>
<span class="token operator">&gt;</span> GET / HTTP/1.1
<span class="token operator">&gt;</span> Host: net.net
<span class="token operator">&gt;</span> User-Agent: curl/7.68.0
<span class="token operator">&gt;</span> Accept: */*
<span class="token operator">&gt;</span>
* Mark bundle as not supporting multiuse
<span class="token operator">&lt;</span> HTTP/1.1 <span class="token number">200</span> OK
<span class="token operator">&lt;</span> Cache-Control: private
<span class="token operator">&lt;</span> Content-Type: text/html
<span class="token operator">&lt;</span> Server: Microsoft-IIS/10.0
<span class="token operator">&lt;</span> Set-Cookie: <span class="token assign-left variable">ASPSESSIONIDASRSRRAR</span><span class="token operator">=</span>IMFFLMBBBIFJNLNDHLOACDAI<span class="token punctuation">;</span> <span class="token assign-left variable">path</span><span class="token operator">=</span>/
<span class="token operator">&lt;</span> X-Powered-By: ASP.NET
<span class="token operator">&lt;</span> Date: Mon, 04 Oct <span class="token number">2021</span> <span class="token number">21</span>:40:49 GMT
<span class="token operator">&lt;</span> Content-Length: <span class="token number">1080</span>
<span class="token operator">&lt;</span>
<span class="token operator">&lt;</span>html<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>head<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>NET.NET <span class="token punctuation">[</span>The first domain name on the Internet<span class="token operator">!</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>/title<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>/head<span class="token operator">&gt;</span>
        <span class="token punctuation">..</span>.
</code></pre><div class="highlight-lines"><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div></div><p>En el ejemplo anterior podemos ver las cabeceras de nuestra solicitud (REQUEST) precedidas del caracter <code>&gt;</code> mientras que las cabeceras de la respuesta (RESPONSE) se muestran precedidas dek caracter <code>&lt;</code>.</p><p>::: info formato corto y largo de los par\xE1metros Como ya hemos visto, los par\xE1metros sirven para modificar el comportamiento por defecto de curl en funci\xF3n de las necesidades.</p><p>Los par\xE1metros de una sola letra son r\xE1pidos de usar y recordar, pero tenemos un n\xFAmero limitado de par\xE1metros de este tipo por lo que no podemos tener uno para cada opci\xF3n. Los par\xE1metros que usan palabras est\xE1n para solucionar la falta de opciones con formato corto. Por otro lado, su uso hace que los comandos sean m\xE1s legibles, por este motivo la mayor\xEDa de par\xE1metros cortos tienen su equivalente largo.</p><p>En el formato corto, los par\xE1metros est\xE1n formados por un gui\xF3n seguido de la letra correspondiente a la opci\xF3n. Se puede usar un gui\xF3n para cada opci\xF3n, o incluir varias opciones detr\xE1s de un \xFAnico gui\xF3n.</p><blockquote><p>$&gt; curl -v -L http://example.com $&gt; curl -vL http://example.com</p></blockquote><p>En el formato largo, los par\xE1metros se preceden de dos guiones y la palabra o palabras que forman la opci\xF3n. Tras cada doble gui\xF3n s\xF3lo se puede indicar una opci\xF3n.</p><blockquote><p>$&gt; curl --verbose --location http://example.com</p></blockquote><p>:::</p><p>Por \xFAltimo, aunque ya hemos visto como obtener la informaci\xF3n de las cabeceras, podemos visualizar la informaci\xF3n de la respuesta de forma completa usando la opci\xF3n <code>-i (--include)</code> or obtener s\xF3lo las cabeceras de la respuesta con el uso de la opci\xF3n <code>-I (--head)</code>. Esto s\xF3lo afecta al informaci\xF3n de la respuesta (HTTP RESPONSE) y en el primer caso veremos la respuesta completa (headers &amp; data) o s\xF3lo los headers con la segunda opci\xF3n.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>$<span class="token operator">&gt;</span>  <span class="token function">curl</span> <span class="token parameter variable">-I</span> https://jsonplaceholder.typicode.com/todos/1
HTTP/2 <span class="token number">200</span>
date: Mon, 04 Oct <span class="token number">2021</span> <span class="token number">21</span>:57:55 GMT
content-type: application/json<span class="token punctuation">;</span> <span class="token assign-left variable">charset</span><span class="token operator">=</span>utf-8
content-length: <span class="token number">83</span>
x-powered-by: Express
x-ratelimit-limit: <span class="token number">1000</span>
x-ratelimit-remaining: <span class="token number">999</span>
x-ratelimit-reset: <span class="token number">1631546224</span>
vary: Origin, Accept-Encoding
access-control-allow-credentials: <span class="token boolean">true</span>
cache-control: max-age<span class="token operator">=</span><span class="token number">43200</span>
pragma: no-cache
expires: <span class="token parameter variable">-1</span>
x-content-type-options: nosniff
etag: W/<span class="token string">&quot;53-hfEnumeNh6YirfjyjaujcOPPT+s&quot;</span>
via: <span class="token number">1.1</span> vegur
cf-cache-status: HIT
age: <span class="token number">10926</span>
accept-ranges: bytes
expect-ct: max-age<span class="token operator">=</span><span class="token number">604800</span>, report-uri<span class="token operator">=</span><span class="token string">&quot;https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct&quot;</span>
report-to: <span class="token punctuation">{</span><span class="token string">&quot;endpoints&quot;</span>:<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;url&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=LxJlkSosQdWmBFBOx1fB6zrbjSbU0iStl7jjtlVL27CtOEPxem%2Ffl9y%2BCajMUopcZINOEsaufiU8A2glOLEmNpO5a40%2FyWb%2B4dBuspS8VGWnCRW4jxBBmh%2F3FbupAEaxy66TUPariKJLqe3PL5iq&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>,<span class="token string">&quot;group&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;cf-nel&quot;</span>,<span class="token string">&quot;max_age&quot;</span>:604800<span class="token punctuation">}</span>
nel: <span class="token punctuation">{</span><span class="token string">&quot;success_fraction&quot;</span>:0,<span class="token string">&quot;report_to&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;cf-nel&quot;</span>,<span class="token string">&quot;max_age&quot;</span>:604800<span class="token punctuation">}</span>
server: cloudflare
cf-ray: 6991ab2c1a5037c7-MAD
alt-svc: <span class="token assign-left variable">h3</span><span class="token operator">=</span><span class="token string">&quot;:443&quot;</span><span class="token punctuation">;</span> <span class="token assign-left variable">ma</span><span class="token operator">=</span><span class="token number">86400</span>, h3-29<span class="token operator">=</span><span class="token string">&quot;:443&quot;</span><span class="token punctuation">;</span> <span class="token assign-left variable">ma</span><span class="token operator">=</span><span class="token number">86400</span>, h3-28<span class="token operator">=</span><span class="token string">&quot;:443&quot;</span><span class="token punctuation">;</span> <span class="token assign-left variable">ma</span><span class="token operator">=</span><span class="token number">86400</span>, h3-27<span class="token operator">=</span><span class="token string">&quot;:443&quot;</span><span class="token punctuation">;</span> <span class="token assign-left variable">ma</span><span class="token operator">=</span><span class="token number">86400</span>
</code></pre><div class="highlight-lines"><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div></div><p>Para acabar, y como curiosidad, a\xF1adiendo la opci\xF3n <code>-w &quot;%{time_total}\\n&quot;</code> podremos ver el tiempo total que se ha tardado en recibir la respuesta del servidor.</p><h2 id="_2-4-2-puntos-finales-y-rutas" tabindex="-1">2.4.2 Puntos finales y rutas</h2><p>El t\xE9rmino t\xE9cnico <code>endpoint</code> hace referencia la la URL que se utiliza URL para hacer una petici\xF3n. Para un mismo servicio, esta URL suele ser siempre la misma y es una de las caracter\xEDsticas de las API REST.</p><p>Para un API, los <em>puntos finales</em> son URLs y se describen en la documentaci\xF3n de la APU de forma que los programadores sepan c\xF3mo usarla y acceder a los recursos y servicios que proporciona.</p><p>En el siguiente ejemplo tenemos una API con el siguiente endpoint.</p><blockquote><p>GET https://my-api.com/Library/Books</p></blockquote><p>Esto devolver\xEDa una lista completa de los libros que hay en la biblioteca.</p><p>Una ruta (&quot;route&quot;) no es m\xE1s que la parte de la URL que completa al endpoint y que se utiliza para seleccionar y/o acceder a diferentes componentes del servicio o API.</p><blockquote><p>GET https://my-api.com/Library/Books/341</p></blockquote><p>El ejemplo anterior devolver\xEDa el libro con identificador 341 de los que hay en la biblioteca.</p>`,35),N=s("Como ejemplo en "),I={href:"https://swapi.dev/",target:"_blank",rel:"noopener noreferrer"},L=s("SWAPI (Star Wars API)"),w=s(" el endpoint es "),_=a("code",null,"https://swapi.dev/api/",-1),O=s(". Este es el punto de entrada para todas las peticiones."),S=o(`<p>Adem\xE1s, hay muchas rutas dependiendo de la informaci\xF3n que queramos recuperar/a\xF1adir/modificar/borrar..</p><div class="language-java ext-java"><pre class="language-java"><code>$<span class="token operator">&gt;</span> curl https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>swapi<span class="token punctuation">.</span>dev<span class="token operator">/</span>api<span class="token operator">/</span>people<span class="token operator">/</span><span class="token number">1</span>
$<span class="token operator">&gt;</span> curl https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>swapi<span class="token punctuation">.</span>dev<span class="token operator">/</span>api<span class="token operator">/</span>planet<span class="token operator">/</span><span class="token number">3</span>
$<span class="token operator">&gt;</span> curl https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>swapi<span class="token punctuation">.</span>dev<span class="token operator">/</span>api<span class="token operator">/</span>vehicles
</code></pre></div><h2 id="_2-4-3-metodos-http-y-cabeceras" tabindex="-1">2.4.3 M\xE9todos HTTP y cabeceras</h2><p>Todas las peticiones HTTP tienen un m\xE9todo asociado, tambi\xE9n llamado verbo. Por defecto ya hemos visto que se usa GET, pero tambi\xE9n tenemos POST, HEAD y PUT que se utilizan bastante.</p><p>POST es el m\xE9todo HTTP que se ide\xF3 para enviar y recibir informaci\xF3n de una aplicaci\xF3n web y es el que utilizan, entre otros, los formularios web.</p><p>Cuando los datos de un formulario se env\xEDan desde un navegador se mandan <code>URL encoded</code>, como una serie de pares nombre=valor separados con s\xEDmbolos ampersand (&amp;).</p><p>Para enviar datos con curl lo indicamos con la opci\xF3n <code>-d (--data)</code> con el siguiente formato:</p><blockquote><p>curl -d &#39;name=admin&amp;shoesize=12&#39; http://example.com/</p></blockquote><p>Curl es capaz de seleccionar el m\xE9todo HTTP que debe utilizar en funci\xF3n de las opciones que recibe. Si utilizamos <code>-d</code> curl har\xE1 un POST, con <code>-I</code> har\xE1 un HEAD, etc. Con la opci\xF3n <code>-X (--request)</code> podemos indicar qu\xE9 m\xE9todo queremos que use curl.</p><blockquote><p>curl -X POST -d &#39;imageSize=big&amp;imageType=jpg&#39; http://example.org/</p></blockquote><p>Si usamos la opci\xF3n POSTing with curl&#39;s <code>-d</code> ya hemos visto que por defecto se hace POST. Adem\xE1s de eso, se incluye una cabecera para indicar el formato de los datos enviados <code>Content-Type: application/x-www-form-urlencoded</code>. Esto es lo que hace un navegador cuando enviamos un formulario.</p><p>Puede ocurrir que los datos que estamos enviando no tengan ese formato, bien porque estemos subiendo alg\xFAn archivo, enviando informaci\xF3n binaria, usando JSON, XML, ... en estos casos podemos, a trav\xE9s de la misma cabecera Content-Type, indicar el formato de la informaci\xF3n que estamos enviando.</p><p>Por ejemplo si queremos enviar informaci\xF3n en formato jSON:</p><blockquote><p>curl -X &quot;POST&quot; -d &#39;{&quot;imageSize&quot;:&quot;big&quot;,&quot;imageType&quot;:&quot;jpg&quot;,&quot;scale&quot;:&quot;false&quot;}&#39; -H &#39;Content-Type: application/json&#39; https://example.com</p></blockquote><h2 id="_2-4-4-authentication" tabindex="-1">2.4.4 Authentication</h2><p>Cada solicitud HTTP puede ser autenticada. Un servidor o proxy puede necesitar que el usuario confirme su identidad o que tiene los permisos necesarios para acceder a una URL para realizar una acci\xF3n. En ese caso se le enviar\xE1 al cliente una respuesta en la que se le indique que debe proporcionar informaci\xF3n de autenticaci\xF3n en la cabecera HTTP para que se le permita completar esa solicitud.</p><p>En curl, la forma de realizar una petici\xF3n HTTP autenticadaes con la opci\xF3n <code>-u (--user)</code> y proporcionando un usuario y contrase\xF1a (separados por <code>:</code>).</p><blockquote><p>curl --user daniel:secret http://example.com/</p></blockquote><p>Esto har\xE1 que curl utilice el m\xE9todo de autenticaci\xF3n HTTP por defecto, denominado &quot;Basic&quot;</p><p>Otras aplicaciones hacen uso de una clave secreta <code>secret key</code> o testigos de autorizaci\xF3n <code>Authorization token</code>. Esta informaci\xF3n nos la proporciona del servicio cuando lo creamos y configuramos.</p>`,20),P={href:"https://developer.atlassian.com/cloud/trello/guides/rest-api/api-introduction/",target:"_blank",rel:"noopener noreferrer"},R=s("Trello API Introduction"),M={href:"https://docs.microsoft.com/es-es/azure/cognitive-services/translator/reference/v3-0-translate",target:"_blank",rel:"noopener noreferrer"},x=s("Azure Translator API Reference"),j=o(`<p>Por ejemplo, si queremos usar el servicio <code>translate</code> de Azure tendremos que obtener una <em>secret key</em> y utilizarla en la cabecera de cada solicitud que realicemos</p><div class="language-java ext-java"><pre class="language-java"><code>$<span class="token operator">&gt;</span> curl <span class="token operator">-</span><span class="token class-name">X</span> <span class="token constant">POST</span> <span class="token string">&quot;https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&amp;to=en&amp;to=it&quot;</span> <span class="token operator">-</span><span class="token class-name">H</span> <span class="token string">&quot;Ocp-Apim-Subscription-Key: &lt;here goes your susbcription key&gt;&quot;</span> <span class="token operator">-</span><span class="token class-name">H</span> <span class="token string">&quot;Content-Type: application/json; charset=UTF-8&quot;</span> <span class="token operator">-</span>d <span class="token string">&quot;[{&#39;Text&#39;:&#39;Hola, com esteu?&#39;}]&quot;</span>
<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;detectedLanguage&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;language&quot;</span><span class="token operator">:</span><span class="token string">&quot;ca&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;score&quot;</span><span class="token operator">:</span><span class="token number">1.0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;translations&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token operator">:</span><span class="token string">&quot;Hello, how are you?&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;to&quot;</span><span class="token operator">:</span><span class="token string">&quot;en&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token operator">:</span><span class="token string">&quot;Ciao come stai?&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;to&quot;</span><span class="token operator">:</span><span class="token string">&quot;it&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre></div><p>Otras veces, para no enviar siempre la secret key, solicitamos una autorizaci\xF3n temporal, obteniendo un <code>Authorization token</code> que podemos usar para acceder al servicio durante un breve per\xEDodo de tiempo. Una vez que el token expire, debemos solicitar otro. Para el env\xEDo de tokens se utiliza la cabecera <code>Authorization: Bearer &lt;token&gt;</code>.</p><div class="language-java ext-java"><pre class="language-java"><code>$<span class="token operator">&gt;</span> curl <span class="token operator">-</span><span class="token class-name">X</span> <span class="token constant">POST</span> <span class="token string">&quot;https://api.cognitive.microsoft.com/sts/v1.0/issueToken&quot;</span> 
        <span class="token operator">-</span><span class="token class-name">H</span> <span class="token string">&quot;Ocp-Apim-Subscription-Key: &lt;here goes the secret key&gt;&quot;</span> <span class="token operator">-</span>d <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token class-name"><span class="token namespace">eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9<span class="token punctuation">.</span>eyJyZWdpb24iOiJnbG9iYWwiLCJzdWJzY3JpcHRpb24taWQiOiJjOTM1ZjNhNjIwMjM0ZTVhYTIyNzUzMmI4ZGQ2ZmRkYyIsInByb2R1Y3QtaWQiOiJUZXh0VHJhbnNsYXRvci5GMCIsImNvZ25pdGl2ZS1zZXJ2aWNlcy1lbmRwb2ludCI6Imh0dHBzOi8vYXBpLmNvZ25pdGl2ZS5taWNyb3NvZnQuY29tL2ludGVybmFsL3YxLjAvIiwiYXp1cmUtcmVzb3VyY2UtaWQiOiIvc3Vic2NyaXB0aW9ucy9iMTFlODUwMS1kNjg2LTRmNjctODg4NC0wMjkzYmNkYTQ5NGEvcmVzb3VyY2VHcm91cHMvVGVzdFBTUC9wcm92aWRlcnMvTWljcm9zb2Z0LkNvZ25pdGl2ZVNlcnZpY2VzL2FjY291bnRzL3RyYW5zbGF0b3JQU1AtVk1NIiwic2NvcGUiOiJodHRwczovL2FwaS5taWNyb3NvZnR0cmFuc2xhdG9yLmNvbS8iLCJhdWQiOiJ1cm46bXMubWljcm9zb2Z0dHJhbnNsYXRvciIsImV4cCI6MTYzMzM4OTcxMCwiaXNzIjoidXJuOm1zLmNvZ25pdGl2ZXNlcnZpY2VzIn0<span class="token punctuation">.</span></span>MFr7ka5azMv</span><span class="token operator">-</span><span class="token number">2</span>ZakpdJc6GIWAsp4SJKN6Hfe1LzmNJE
$<span class="token operator">&gt;</span> curl <span class="token operator">-</span><span class="token class-name">X</span> <span class="token constant">POST</span> 
<span class="token string">&quot;https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&amp;to=en&amp;to=it&quot;</span> 
<span class="token operator">-</span><span class="token class-name">H</span> <span class="token string">&quot;Authorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJyZWdpb24iOiJnbG9iYWwiLCJzdWJzY3JpcHRpb24taWQiOiJjOTM1ZjNhNjIwMjM0ZTVhYTIyNzUzMmI4ZGQ2ZmRkYyIsInByb2R1Y3QtaWQiOiJUZXh0VHJhbnNsYXRvci5GMCIsImNvZ25pdGl2ZS1zZXJ2aWNlcy1lbmRwb2ludCI6Imh0dHBzOi8vYXBpLmNvZ25pdGl2ZS5taWNyb3NvZnQuY29tL2ludGVybmFsL3YxLjAvIiwiYXp1cmUtcmVzb3VyY2UtaWQiOiIvc3Vic2NyaXB0aW9ucy9iMTFlODUwMS1kNjg2LTRmNjctODg4NC0wMjkzYmNkYTQ5NGEvcmVzb3VyY2VHcm91cHMvVGVzdFBTUC9wcm92aWRlcnMvTWljcm9zb2Z0LkNvZ25pdGl2ZVNlcnZpY2VzL2FjY291bnRzL3RyYW5zbGF0b3JQU1AtVk1NIiwic2NvcGUiOiJodHRwczovL2FwaS5taWNyb3NvZnR0cmFuc2xhdG9yLmNvbS8iLCJhdWQiOiJ1cm46bXMubWljcm9zb2Z0dHJhbnNsYXRvciIsImV4cCI6MTYzMzMwMTUxNywiaXNzIjoidXJuOm1zLmNvZ25pdGl2ZXNlcnZpY2VzIn0.0hyyBNr22E2sIO_ZBlTiBePXM_KE_5hQOCeHxz3US44&quot;</span> 
<span class="token operator">-</span><span class="token class-name">H</span> <span class="token string">&quot;Content-Type: application/json; charset=UTF-8&quot;</span> <span class="token operator">-</span>d <span class="token string">&quot;[{&#39;Text&#39;:&#39;Hola, com esteu?&#39;}]&quot;</span>
<span class="token punctuation">{</span><span class="token string">&quot;error&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;code&quot;</span><span class="token operator">:</span><span class="token number">401000</span><span class="token punctuation">,</span><span class="token string">&quot;message&quot;</span><span class="token operator">:</span><span class="token string">&quot;The request is not authorized because credentials are missing or invalid.&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
$<span class="token operator">&gt;</span> curl <span class="token operator">-</span><span class="token class-name">X</span> <span class="token constant">POST</span> 
<span class="token string">&quot;https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&amp;to=en&amp;to=it&quot;</span> 
<span class="token operator">-</span><span class="token class-name">H</span> <span class="token string">&quot;Authorization: Bearer eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJyZWdpb24iOiJnbG9iYWwiLCJzdWJzY3JpcHRpb24taWQiOiJjOTM1ZjNhNjIwMjM0ZTVhYTIyNzUzMmI4ZGQ2ZmRkYyIsInByb2R1Y3QtaWQiOiJUZXh0VHJhbnNsYXRvci5GMCIsImNvZ25pdGl2ZS1zZXJ2aWNlcy1lbmRwb2ludCI6Imh0dHBzOi8vYXBpLmNvZ25pdGl2ZS5taWNyb3NvZnQuY29tL2ludGVybmFsL3YxLjAvIiwiYXp1cmUtcmVzb3VyY2UtaWQiOiIvc3Vic2NyaXB0aW9ucy9iMTFlODUwMS1kNjg2LTRmNjctODg4NC0wMjkzYmNkYTQ5NGEvcmVzb3VyY2VHcm91cHMvVGVzdFBTUC9wcm92aWRlcnMvTWljcm9zb2Z0LkNvZ25pdGl2ZVNlcnZpY2VzL2FjY291bnRzL3RyYW5zbGF0b3JQU1AtVk1NIiwic2NvcGUiOiJodHRwczovL2FwaS5taWNyb3NvZnR0cmFuc2xhdG9yLmNvbS8iLCJhdWQiOiJ1cm46bXMubWljcm9zb2Z0dHJhbnNsYXRvciIsImV4cCI6MTYzMzM4OTcxMCwiaXNzIjoidXJuOm1zLmNvZ25pdGl2ZXNlcnZpY2VzIn0.MFr7ka5azMv-2ZakpdJc6GIWAsp4SJKN6Hfe1LzmNJE&quot;</span> 
<span class="token operator">-</span><span class="token class-name">H</span> <span class="token string">&quot;Content-Type: application/json; charset=UTF-8&quot;</span> <span class="token operator">-</span>d <span class="token string">&quot;[{&#39;Text&#39;:&#39;Hola, com esteu?&#39;}]&quot;</span>
<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;detectedLanguage&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string">&quot;language&quot;</span><span class="token operator">:</span><span class="token string">&quot;ca&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;score&quot;</span><span class="token operator">:</span><span class="token number">1.0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;translations&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token operator">:</span><span class="token string">&quot;Hello, how are you?&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;to&quot;</span><span class="token operator">:</span><span class="token string">&quot;en&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string">&quot;text&quot;</span><span class="token operator">:</span><span class="token string">&quot;Ciao come stai?&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;to&quot;</span><span class="token operator">:</span><span class="token string">&quot;it&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre><div class="highlight-lines"><div class="highlight-line">\xA0</div><br><div class="highlight-line">\xA0</div><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br></div></div><h2 id="_2-4-5-references" tabindex="-1">2.4.5 References</h2>`,5),E={href:"https://everything.curl.dev/",target:"_blank",rel:"noopener noreferrer"},C=s("Everything curl"),Z=s(" es un libro gratuito que cubre con detalle pr\xE1cticamente todo lo que hay que saber sobre curl."),H={href:"https://www.freecodecamp.org/news/how-to-start-using-curl-and-why-a-hands-on-introduction-ea1c913caaaa/",target:"_blank",rel:"noopener noreferrer"},J=s("freecodecamp.org"),W={href:"https://curl.se/",target:"_blank",rel:"noopener noreferrer"},Y=s("Sitio oficial de curl");function U(A,G){const p=t("DownloadPDF-component"),r=t("DocumentCover-component"),e=t("ExternalLinkIcon");return l(),i("div",null,[n(p),n(r,{titulo:"2.4 Anexo I - Curl"}),d,a("p",null,[k,a("a",m,[b,n(e)]),g]),a("ul",null,[h,a("li",null,[q,a("blockquote",null,[a("p",null,[v,a("a",f,[y,n(e)])])])]),T]),z,a("p",null,[N,a("a",I,[L,n(e)]),w,_,O]),S,a("p",null,[a("a",P,[R,n(e)])]),a("p",null,[a("a",M,[x,n(e)])]),j,a("p",null,[a("a",E,[C,n(e)]),Z]),a("p",null,[a("a",H,[J,n(e)])]),a("p",null,[a("a",W,[Y,n(e)])])])}const X=c(u,[["render",U],["__file","curl_annex.html.vue"]]);export{X as default};
