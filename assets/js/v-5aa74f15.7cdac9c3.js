"use strict";(self.webpackChunkapuntes_psp=self.webpackChunkapuntes_psp||[]).push([[284],{546:(e,s,n)=>{n.r(s),n.d(s,{data:()=>l});const l={key:"v-5aa74f15",path:"/en/unit1/concurrency.html",title:"1.2 Concurrency",lang:"en-US",frontmatter:{title:"1.2 Concurrency"},excerpt:"",headers:[{level:2,title:"1.2.1. Concurrency vs Parallelism",slug:"_1-2-1-concurrency-vs-parallelism",children:[{level:3,title:"Monoprocess",slug:"monoprocess",children:[]},{level:3,title:"Multitasking",slug:"multitasking",children:[]},{level:3,title:"Parallelism",slug:"parallelism",children:[]}]},{level:2,title:"1.2.2. Sistemas distribuidos",slug:"_1-2-2-sistemas-distribuidos",children:[]},{level:2,title:"1.2.3. Ventajas e inconvenientes",slug:"_1-2-3-ventajas-e-inconvenientes",children:[]},{level:2,title:"1.2.4. Condiciones de Bernstein",slug:"_1-2-4-condiciones-de-bernstein",children:[]}],filePathRelative:"en/unit1/concurrency.md",git:{updatedTime:1631440036e3,contributors:[{name:"Vicente Martínez",email:"vicente@iesdoctorbalmis.com",commits:1}]}}},5393:(e,s,n)=>{n.r(s),n.d(s,{default:()=>De});var l=n(6252),a=n(3804),o=n(3784),i=n(9431);const r=(0,l._)("h1",{id:"_1-2-concurrency",tabindex:"-1"},"1.2. Concurrency",-1),t={class:"table-of-contents"},u=(0,l.Uk)("1.2.1. Concurrency vs Parallelism"),c=(0,l.Uk)("Monoprocess"),d=(0,l.Uk)("Multitasking"),p=(0,l.Uk)("Parallelism"),m=(0,l.Uk)("1.2.2. Sistemas distribuidos"),_=(0,l.Uk)("1.2.3. Ventajas e inconvenientes"),b=(0,l.Uk)("1.2.4. Condiciones de Bernstein"),h=(0,l.Uk)("According to the "),y={href:"https://www.collinsdictionary.com/es/diccionario/ingles/concurrency",target:"_blank",rel:"noopener noreferrer"},g=(0,l.Uk)("Collins dictionary"),k=(0,l.Uk)(" some of the senses os the word concurrency are"),v=(0,l._)("blockquote",null,[(0,l._)("p",null,"Ccooperation or combination. Simultaneous occurrence; coincidence.")],-1),A=(0,l._)("p",null,[(0,l.Uk)("If we change occurrence to "),(0,l._)("code",null,"process"),(0,l.Uk)(", we get a definition closer to its sense in the computer science.")],-1),S=(0,l._)("p",null,[(0,l.Uk)("This is not the first time the word "),(0,l._)("code",null,"process"),(0,l.Uk)(" appears, that is because they are one of the most important concepts in programming.")],-1),U=(0,l._)("h2",{id:"_1-2-1-concurrency-vs-parallelism",tabindex:"-1"},"1.2.1. Concurrency vs Parallelism",-1),f=(0,l._)("p",null,"Now that we already know what a process is, let's look at its relationship with the hardware where they are run.",-1),E=(0,l._)("h3",{id:"monoprocess",tabindex:"-1"},"Monoprocess",-1),j=(0,l._)("p",null,"Por mucho que tengamos varios procesos procesos ejecutándose a la vez, si sólo tenemos un microprocesador para atenderlos a todos, estas tareas nunca van a poder ejecutarse a la vez.",-1),w=(0,l._)("p",null,"Una posibilidad sería la ejecución secuencias de las tareas en el sistema. Se empieza a ejecutar una tarea y, hasta que esta no finaliza, el sistema no empieza a ejecutar la siguiente. Esto se correspondería con sistemas que sólo son capaces de hacer una tarea a la vez, algo raro hoy en día.",-1),x=(0,l._)("p",null,[(0,l._)("img",{src:a,alt:"Secuential execution of tasks (monoprocessor system)"})],-1),D=(0,l._)("h3",{id:"multitasking",tabindex:"-1"},"Multitasking",-1),q=(0,l._)("p",null,"In a multiprogramming system there are one or more programs loaded in main memory which are ready to execute. Only one program at a time is able to get the CPU for executing its instructions while all the others are waiting their turn.",-1),B=(0,l._)("p",null,"The main idea of multiprogramming is to maximize the use of CPU time. Indeed, suppose the currently running process is performing an I/O task (which, by definition, does not need the CPU to be accomplished). Then, the OS may interrupt that process and give the control to one of the other in-main-memory programs that are ready to execute (i.e. process context switching). It is said that running processes are multiplexed on time.",-1),C=(0,l._)("p",null,[(0,l.Uk)("This way, the OS gives as the illusion that many processes are running simultaneosly. That is commonly called "),(0,l._)("code",null,"multitasking"),(0,l.Uk)(".")],-1),z=(0,l._)("p",null,[(0,l._)("img",{src:o,alt:"Concurrent execution of tasks (monoprocessor system)"})],-1),F=(0,l._)("p",null,"On both previous images can be observed how the total CPU time to complete all processes is the same in both models. Nonetheless, on the second model the user has the sensation that all tasks are running at the same time.",-1),L=(0,l._)("h3",{id:"parallelism",tabindex:"-1"},"Parallelism",-1),P=(0,l._)("p",null,"Multiprocessing sometimes refers to executing multiple processes (programs) at the same time. This might be misleading because we have already introduced the term “multiprogramming” to describe that before. In fact, multiprocessing refers to the hardware (i.e., the CPU units) rather than the software (i.e., running processes). If the underlying hardware provides more than one processor then that is multiprocessing. Several variations on the basic scheme exist, e.g., multiple cores on one die or multiple dies in one package or multiple packages in one system. Anyway, a system can be both multiprogrammed by having multiple programs running at the same time and multiprocessing by having more than one physical processor.",-1),I=(0,l._)("p",null,[(0,l.Uk)("Nowadays most devices, from desktop to laptops through mobile devices and IoT, all of them offer multiprocess capabilities, that is, they have mor than one processing unit to really do many tasks at the same time, no simulate it. This kind of execution is called "),(0,l._)("code",null,"parallelism"),(0,l.Uk)(".")],-1),T=(0,l._)("p",null,[(0,l._)("img",{src:i,alt:"Parallel execution of tasks (dual processor system)"})],-1),W=(0,l._)("p",null,"The bigger the processor units number is, the less time the tasks it takes to run and the user will have a better experience. This is one of the goals of operating systems, schedule properly the tasks to minimize running times, wait times and to maximize the resources use , mainly the processors.",-1),M=(0,l._)("div",{class:"custom-container question"},[(0,l._)("p",{class:"custom-container-title"},"cores vs threads"),(0,l._)("p",null,[(0,l.Uk)("Si habéis comprado un procesador hace poco, o estáis al día en cuanto al hardware, sabréis que una de las características de los procesadores es su "),(0,l._)("strong",null,"número de núcleos"),(0,l.Uk)(" (4, 8, 16).")]),(0,l._)("p",null,[(0,l.Uk)("Pero además, al número de núcleos lo acompaña otra característica que es el número de "),(0,l._)("strong",null,"hilos o threads"),(0,l.Uk)(", que suele ser el doble que el de núcleos.")]),(0,l._)("p",null,"¿Qué implicación tienen los threads de un procesador con respecto a la concurrencia? ¿Si un equipo tiene 8 núcleos / 16 hilos significa eso que puede ejecutar 16 procesos a la vez?")],-1),O=(0,l._)("h2",{id:"_1-2-2-sistemas-distribuidos",tabindex:"-1"},"1.2.2. Sistemas distribuidos",-1),N=(0,l._)("blockquote",null,[(0,l._)("p",null,'"Un sistema distribuido es una colección de computadores independientes que aparecen ante los usuarios como un único sistema coherente"'),(0,l._)("p",null,'"Andrew S. Tanembaum"')],-1),V=(0,l._)("p",null,[(0,l.Uk)("Posiblemente el ejemplo más famoso y conocido de sistema distribuido sea "),(0,l._)("code",null,"Internet"),(0,l.Uk)(".Internet aparece ante los usuarios como un enorme repositorio de documentos, es decir, como un único sistema capaz de proveer casi cualquier tipo de información o servicio que se necesite. No obstante, sabemos que está compuesta por millones de equipos ubicados en localizaciones diferentes e interconectados entre sí.")],-1),R=(0,l._)("p",null,[(0,l.Uk)("Nace de la necesidad de compartir recursos. Actualmente el máximo exponente de este tipo de sistemas es el "),(0,l._)("code",null,"Cloud Computing"),(0,l.Uk)(" o servicios en la nube. Un sistema es distribuido cuando los componentes software están distribuidos en la red, se comunican y coordinan mediante el paso de mensajes.")],-1),H=(0,l._)("p",null,"Las características de este tipo de sistemas son::",-1),Y=(0,l._)("ul",null,[(0,l._)("li",null,"Concurrencia: ejecución de programas concurrentes."),(0,l._)("li",null,"Inexistencia de un reloj global. Implica sincronizarse con el paso de mensajes."),(0,l._)("li",null,"Fallos independientes: cada componente del sistema puede fallar sin que perjudique la ejecución de los demás.")],-1),J=(0,l._)("h2",{id:"_1-2-3-ventajas-e-inconvenientes",tabindex:"-1"},"1.2.3. Ventajas e inconvenientes",-1),Q=(0,l._)("p",null,"Ventajas del procesamiento paralelo:",-1),G=(0,l._)("ul",null,[(0,l._)("li",null,"Ejecución simultánea de tareas."),(0,l._)("li",null,"Disminuye el tiempo total de ejecución"),(0,l._)("li",null,"Resuelve problemas complejos y de grandes dimensiones."),(0,l._)("li",null,"Utilización de recursos no locales distribuidos en la red"),(0,l._)("li",null,"Disminución de costos, aprevechando los recursos distribuidos, no es necesario gastar en un único supercomputardor, se puede alcanzar el mismo poder de computación con equipos más modestos distribuidos.")],-1),K=(0,l._)("p",null,"Inconvenientes del procesamiento paralelo:",-1),X=(0,l._)("li",null,"Los compiladores y entornos de programación para sistemas paralelos son más complicados de desarrollar.",-1),Z=(0,l._)("li",null,"Los programas paralelos son más difíciles de escribir",-1),$=(0,l._)("li",null,"Hay mayor consumo de energía",-1),ee=(0,l._)("li",null,"Mayor complejidad en el acceso a datos",-1),se=(0,l.Uk)("Complejidad a la hora de la comunicación y sincronización de las diferentes subtareas. "),ne=(0,l._)("p",null,"Ventajas de la programación distribuida",-1),le=(0,l._)("ul",null,[(0,l._)("li",null,"Se comparten recursos y datos"),(0,l._)("li",null,"Crecimiento bajo demanda"),(0,l._)("li",null,"Mayor flexibildad para distribuir la carga"),(0,l._)("li",null,"Alta disponibilidad"),(0,l._)("li",null,"Soporte de aplicaciones distribuidas"),(0,l._)("li",null,"Filosofía abierta y hetereogénea")],-1),ae=(0,l._)("div",{class:"custom-container question"},[(0,l._)("p",{class:"custom-container-title"},"Escalado de sistemas"),(0,l._)("p",null,"Con escalado nos referimos a la posibilidad de incrementar las capacidades de un sistema."),(0,l._)("p",null,[(0,l.Uk)("Investiga las diferencias, ventajas e inconvenientes del "),(0,l._)("code",null,"escalado horizontal"),(0,l.Uk)(" y el "),(0,l._)("code",null,"escalado vertical"),(0,l.Uk)(".")])],-1),oe=(0,l._)("p",null,"Inconvenientes de la programación distribuida",-1),ie=(0,l._)("ul",null,[(0,l._)("li",null,"Aumenta la complejidad"),(0,l._)("li",null,"Se necesita software nuevo especializado"),(0,l._)("li",null,"Problemas derivados de las comunicaciones (perdidas, saturaciones, etc.)"),(0,l._)("li",null,"Problemas de seguridad, ataques DDoS")],-1),re=(0,l._)("p",null,"Ejemplos de utilización de la programación paralela y distribuida",-1),te=(0,l._)("ul",null,[(0,l._)("li",null,"Estudios meteorológicos"),(0,l._)("li",null,"Estudios del genoma humano"),(0,l._)("li",null,"Modelado de la biosfera"),(0,l._)("li",null,"Predicciones sísmicas"),(0,l._)("li",null,"Simulación de moléculas")],-1),ue={class:"custom-container info"},ce=(0,l._)("p",{class:"custom-container-title"},"Ejemplo de programación paralela y distribuida",-1),de={href:"https://setiathome.berkeley.edu/sah_about.php",target:"_blank",rel:"noopener noreferrer"},pe=(0,l.Uk)("Búsqueda de inteligencia extraterrestre - Proyecto SETI"),me=(0,l._)("h2",{id:"_1-2-4-condiciones-de-bernstein",tabindex:"-1"},"1.2.4. Condiciones de Bernstein",-1),_e=(0,l._)("p",null,"Una vez que sabemos qué es un programa concurrente y las distintas arquitecturas hardware que pueden soportarlo, vamos a ver qué partes de un programa se pueden ejecutar de forma concurrente y cuáles no.",-1),be=(0,l._)("p",null,"Si observamos el siguiente código, queda claro que la primera instrucción se debe ejecutar antes que la segunda para que el resultado sea siempre el mismo (para los mismos datos de entrada).",-1),he=(0,l._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,l._)("pre",{class:"shiki",style:{"background-color":"#FAFAFA"}},[(0,l._)("code",null,[(0,l._)("span",{class:"line"},[(0,l._)("span",{style:{color:"#90A4AE"}},"x "),(0,l._)("span",{style:{color:"#39ADB5"}},"="),(0,l._)("span",{style:{color:"#90A4AE"}}," x "),(0,l._)("span",{style:{color:"#39ADB5"}},"+"),(0,l._)("span",{style:{color:"#90A4AE"}}," "),(0,l._)("span",{style:{color:"#F76D47"}},"1"),(0,l._)("span",{style:{color:"#39ADB5"}},";")]),(0,l.Uk)("\n"),(0,l._)("span",{class:"line"},[(0,l._)("span",{style:{color:"#90A4AE"}},"y "),(0,l._)("span",{style:{color:"#39ADB5"}},"="),(0,l._)("span",{style:{color:"#90A4AE"}}," x "),(0,l._)("span",{style:{color:"#39ADB5"}},"+"),(0,l._)("span",{style:{color:"#90A4AE"}}," "),(0,l._)("span",{style:{color:"#F76D47"}},"1"),(0,l._)("span",{style:{color:"#39ADB5"}},";")]),(0,l.Uk)("\n"),(0,l._)("span",{class:"line"})])]),(0,l._)("div",{class:"line-numbers"},[(0,l._)("span",{class:"line-number"},"1"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"2"),(0,l._)("br")])],-1),ye=(0,l._)("p",null,"Sin embargo, en un código como el siguiente el órden en el que se ejecuten las instrucciones no influye en el resultado final (valor de las variables). En este caso se pueden ejecutar las tres sentencias a la vez incrementando la velocidad de procesamiento.",-1),ge=(0,l._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,l._)("pre",{class:"shiki",style:{"background-color":"#FAFAFA"}},[(0,l._)("code",null,[(0,l._)("span",{class:"line"},[(0,l._)("span",{style:{color:"#90A4AE"}},"x "),(0,l._)("span",{style:{color:"#39ADB5"}},"="),(0,l._)("span",{style:{color:"#90A4AE"}}," "),(0,l._)("span",{style:{color:"#F76D47"}},"1"),(0,l._)("span",{style:{color:"#39ADB5"}},";")]),(0,l.Uk)("\n"),(0,l._)("span",{class:"line"},[(0,l._)("span",{style:{color:"#90A4AE"}},"y "),(0,l._)("span",{style:{color:"#39ADB5"}},"="),(0,l._)("span",{style:{color:"#90A4AE"}}," "),(0,l._)("span",{style:{color:"#F76D47"}},"2"),(0,l._)("span",{style:{color:"#39ADB5"}},";")]),(0,l.Uk)("\n"),(0,l._)("span",{class:"line"},[(0,l._)("span",{style:{color:"#90A4AE"}},"z "),(0,l._)("span",{style:{color:"#39ADB5"}},"="),(0,l._)("span",{style:{color:"#90A4AE"}}," "),(0,l._)("span",{style:{color:"#F76D47"}},"3"),(0,l._)("span",{style:{color:"#39ADB5"}},";")]),(0,l.Uk)("\n"),(0,l._)("span",{class:"line"})])]),(0,l._)("div",{class:"line-numbers"},[(0,l._)("span",{class:"line-number"},"1"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"2"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"3"),(0,l._)("br")])],-1),ke=(0,l._)("p",null,[(0,l.Uk)("A.J. Bernstein definió unas condiciones para determinar si dos conjuntos de instrucciones S"),(0,l._)("sub",null,"i"),(0,l.Uk)(" y S"),(0,l._)("sub",null,"j"),(0,l.Uk)(" se pueden ejecutar concurrentemente.")],-1),ve=(0,l._)("p",null,"Para poder determinar si dos conjuntos de instrucciones se pueden ejecutar concurrentemente, se definen en primer lugar los siguientes conjuntos",-1),Ae=(0,l._)("ul",null,[(0,l._)("li",null,[(0,l.Uk)("L(S"),(0,l._)("sub",null,"k"),(0,l.Uk)(") = {a"),(0,l._)("sub",null,"1"),(0,l.Uk)(", a"),(0,l._)("sub",null,"2"),(0,l.Uk)(", a"),(0,l._)("sub",null,"3"),(0,l.Uk)(", ...} como el conjunto de lectura formado por todas las variables cuyos valores se leen durante la ejecución de las instrucciones del conjunto k.")]),(0,l._)("li",null,[(0,l.Uk)("E(S"),(0,l._)("sub",null,"k"),(0,l.Uk)(") = {b"),(0,l._)("sub",null,"1"),(0,l.Uk)(", b"),(0,l._)("sub",null,"2"),(0,l.Uk)(", b"),(0,l._)("sub",null,"3"),(0,l.Uk)(", ...} como el conjunto de escritura formado por todas las variables cuyos valores se actualizan durante la ejecución de las instrucciones del conjunto k.")])],-1),Se=(0,l._)("p",null,[(0,l.Uk)("Para que dos conjuntos de instrucciones S"),(0,l._)("sub",null,"i"),(0,l.Uk)(" y S"),(0,l._)("sub",null,"j"),(0,l.Uk)(" se puedan ejecutar concurrentemente, se deben cumplir estas tres condiciones de forma simultánea.")],-1),Ue=(0,l._)("ul",null,[(0,l._)("li",null,[(0,l.Uk)("L(S"),(0,l._)("sub",null,"i"),(0,l.Uk)(") ∩ E(S"),(0,l._)("sub",null,"j"),(0,l.Uk)(")")]),(0,l._)("li",null,[(0,l.Uk)("E(S"),(0,l._)("sub",null,"i"),(0,l.Uk)(") ∩ L(S"),(0,l._)("sub",null,"j"),(0,l.Uk)(")")]),(0,l._)("li",null,[(0,l.Uk)("E(S"),(0,l._)("sub",null,"i"),(0,l.Uk)(") ∩ E(S"),(0,l._)("sub",null,"j"),(0,l.Uk)(")")])],-1),fe=(0,l._)("div",{class:"custom-container question"},[(0,l._)("p",{class:"custom-container-title"},"Cuales de estas instrucciones se pueden ejecutar de forma concurrente"),(0,l._)("div",{class:"language-java ext-java line-numbers-mode"},[(0,l._)("pre",{class:"shiki",style:{"background-color":"#FAFAFA"}},[(0,l._)("code",null,[(0,l._)("span",{class:"line"},[(0,l._)("span",{style:{color:"#90A4AE"}},"a "),(0,l._)("span",{style:{color:"#39ADB5"}},"="),(0,l._)("span",{style:{color:"#90A4AE"}}," x "),(0,l._)("span",{style:{color:"#39ADB5"}},"+"),(0,l._)("span",{style:{color:"#90A4AE"}}," y"),(0,l._)("span",{style:{color:"#39ADB5"}},";")]),(0,l.Uk)("\n"),(0,l._)("span",{class:"line"},[(0,l._)("span",{style:{color:"#90A4AE"}},"b "),(0,l._)("span",{style:{color:"#39ADB5"}},"="),(0,l._)("span",{style:{color:"#90A4AE"}}," z "),(0,l._)("span",{style:{color:"#39ADB5"}},"-"),(0,l._)("span",{style:{color:"#90A4AE"}}," "),(0,l._)("span",{style:{color:"#F76D47"}},"1"),(0,l._)("span",{style:{color:"#39ADB5"}},";")]),(0,l.Uk)("\n"),(0,l._)("span",{class:"line"},[(0,l._)("span",{style:{color:"#90A4AE"}},"c "),(0,l._)("span",{style:{color:"#39ADB5"}},"="),(0,l._)("span",{style:{color:"#90A4AE"}}," a "),(0,l._)("span",{style:{color:"#39ADB5"}},"-"),(0,l._)("span",{style:{color:"#90A4AE"}}," b"),(0,l._)("span",{style:{color:"#39ADB5"}},";")]),(0,l.Uk)("\n"),(0,l._)("span",{class:"line"},[(0,l._)("span",{style:{color:"#90A4AE"}},"w "),(0,l._)("span",{style:{color:"#39ADB5"}},"="),(0,l._)("span",{style:{color:"#90A4AE"}}," c "),(0,l._)("span",{style:{color:"#39ADB5"}},"+"),(0,l._)("span",{style:{color:"#90A4AE"}}," "),(0,l._)("span",{style:{color:"#F76D47"}},"1"),(0,l._)("span",{style:{color:"#39ADB5"}},";")]),(0,l.Uk)("\n"),(0,l._)("span",{class:"line"})])]),(0,l._)("div",{class:"line-numbers"},[(0,l._)("span",{class:"line-number"},"1"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"2"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"3"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"4"),(0,l._)("br")])])],-1),Ee=(0,l._)("p",null,"Primero deberíamos obtener los conjuntos L y E para cada sentencia",-1),je=(0,l._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,l._)("pre",{class:"shiki",style:{"background-color":"#FAFAFA"}},[(0,l._)("code",null,[(0,l._)("span",{class:"line"},[(0,l._)("span",{style:{color:"#90A4AE"}},"    L(S<sub>1</sub>) = {x, y}   E(S<sub>1</sub>) = {a}\n\n    L(S<sub>2</sub>) = {z}      E(S<sub>1</sub>) = {b}\n\n    L(S<sub>3</sub>) = {a, b}   E(S<sub>3</sub>) = {c}\n\n    L(S<sub>4</sub>) = {c}      E(S<sub>4</sub>) = {w}\n")])])]),(0,l._)("div",{class:"line-numbers"},[(0,l._)("span",{class:"line-number"},"1"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"2"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"3"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"4"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"5"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"6"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"7"),(0,l._)("br")])],-1),we=(0,l._)("p",null,"Y ahora aplicarlas entre cada par de sentencias",-1),xe=(0,l._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,l._)("pre",{class:"shiki",style:{"background-color":"#FAFAFA"}},[(0,l._)("code",null,[(0,l._)("span",{class:"line"},[(0,l._)("span",{style:{color:"#90A4AE"}},"L(S<sub>1</sub>) ∩ E(S<sub>2</sub>) = ∅\nE(S<sub>1</sub>) ∩ L(S<sub>2</sub>) = ∅\nE(S<sub>1</sub>) ∩ E(S<sub>2</sub>) = ∅         // Sí se pueden ejecutar concurrentemente\n\nL(S<sub>1</sub>) ∩ E(S<sub>3</sub>) = ∅\nE(S<sub>1</sub>) ∩ L(S<sub>3</sub>) = {a} ≠ ∅\nE(S<sub>1</sub>) ∩ E(S<sub>3</sub>) = ∅         // NO\n\nL(S<sub>1</sub>) ∩ E(S<sub>4</sub>) = ∅\nE(S<sub>1</sub>) ∩ L(S<sub>4</sub>) = ∅\nE(S<sub>1</sub>) ∩ E(S<sub>4</sub>) = ∅         // Sí se pueden ejecutar concurrentemente\n\nL(S<sub>2</sub>) ∩ E(S<sub>3</sub>) = ∅\nE(S<sub>2</sub>) ∩ L(S<sub>3</sub>) = ∅\nE(S<sub>2</sub>) ∩ E(S<sub>3</sub>) = ∅         // Sí se pueden ejecutar concurrentemente\n\nL(S<sub>2</sub>) ∩ E(S<sub>4</sub>) = ∅\nE(S<sub>2</sub>) ∩ L(S<sub>4</sub>) = ∅\nE(S<sub>2</sub>) ∩ E(S<sub>4</sub>) = ∅         // Sí se pueden ejecutar concurrentemente\n\nL(S<sub>3</sub>) ∩ E(S<sub>4</sub>) = ∅\nE(S<sub>3</sub>) ∩ L(S<sub>4</sub>) = {c} ≠ ∅\nE(S<sub>3</sub>) ∩ E(S<sub>4</sub>) = ∅         // NO\n")])])]),(0,l._)("div",{class:"line-numbers"},[(0,l._)("span",{class:"line-number"},"1"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"2"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"3"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"4"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"5"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"6"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"7"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"8"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"9"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"10"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"11"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"12"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"13"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"14"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"15"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"16"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"17"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"18"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"19"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"20"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"21"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"22"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"23"),(0,l._)("br")])],-1),De={render:function(e,s){const n=(0,l.up)("DownloadPDF-component"),a=(0,l.up)("DocumentCover-component"),o=(0,l.up)("RouterLink"),i=(0,l.up)("OutboundLink"),De=(0,l.up)("Badge");return(0,l.wg)(),(0,l.iD)(l.HY,null,[(0,l.Wm)(n),(0,l.Wm)(a,{titulo:"1.2. Concurrency"}),r,(0,l._)("nav",t,[(0,l._)("ul",null,[(0,l._)("li",null,[(0,l.Wm)(o,{to:"#_1-2-1-concurrency-vs-parallelism"},{default:(0,l.w5)((()=>[u])),_:1}),(0,l._)("ul",null,[(0,l._)("li",null,[(0,l.Wm)(o,{to:"#monoprocess"},{default:(0,l.w5)((()=>[c])),_:1})]),(0,l._)("li",null,[(0,l.Wm)(o,{to:"#multitasking"},{default:(0,l.w5)((()=>[d])),_:1})]),(0,l._)("li",null,[(0,l.Wm)(o,{to:"#parallelism"},{default:(0,l.w5)((()=>[p])),_:1})])])]),(0,l._)("li",null,[(0,l.Wm)(o,{to:"#_1-2-2-sistemas-distribuidos"},{default:(0,l.w5)((()=>[m])),_:1})]),(0,l._)("li",null,[(0,l.Wm)(o,{to:"#_1-2-3-ventajas-e-inconvenientes"},{default:(0,l.w5)((()=>[_])),_:1})]),(0,l._)("li",null,[(0,l.Wm)(o,{to:"#_1-2-4-condiciones-de-bernstein"},{default:(0,l.w5)((()=>[b])),_:1})])])]),(0,l._)("p",null,[h,(0,l._)("a",y,[g,(0,l.Wm)(i)]),k]),v,A,S,U,f,E,j,w,x,D,q,B,C,z,F,L,P,I,T,W,M,O,N,V,R,H,Y,J,Q,G,K,(0,l._)("ul",null,[X,Z,$,ee,(0,l._)("li",null,[se,(0,l.Wm)(De,{type:"danger",text:"cuidado",vertical:"middle"})])]),ne,le,ae,oe,ie,re,te,(0,l._)("div",ue,[ce,(0,l._)("p",null,[(0,l._)("a",de,[pe,(0,l.Wm)(i)])])]),me,_e,be,he,ye,ge,ke,ve,Ae,Se,Ue,fe,Ee,je,we,xe],64)}}},3784:(e,s,n)=>{e.exports=n.p+"assets/img/gantt_concurrent.d7437453.svg"},9431:(e,s,n)=>{e.exports=n.p+"assets/img/gantt_parallel.06a2b959.svg"},3804:(e,s,n)=>{e.exports=n.p+"assets/img/gantt_sequential.4a72000f.svg"}}]);