"use strict";(self.webpackChunkapuntes_psp=self.webpackChunkapuntes_psp||[]).push([[9759],{8957:(e,i,a)=>{a.r(i),a.d(i,{data:()=>r});const r={key:"v-b73e4eec",path:"/en/unit6/",title:"6 Introducción",lang:"en-US",frontmatter:{title:"6 Introducción"},excerpt:"",headers:[{level:2,title:"Objetivos",slug:"objetivos",children:[]}],filePathRelative:"en/unit6/index.md",git:{updatedTime:1642385249e3,contributors:[{name:"Vicente Martínez",email:"vicente@iesdoctorbalmis.com",commits:1}]}}},4577:(e,i,a)=>{a.r(i),a.d(i,{default:()=>s});const r=(0,a(6252).uE)('<h1 id="tema-6-tecnicas-de-programacion-segura" tabindex="-1">Tema 6. Técnicas de programación segura</h1><p>El término criptografía es un derivado de la palabra riega <em>kryptos</em> que significa oculto y <em>grafos</em> que significa escritura. El objetivo de la criptografía es ocultar el significado de un mensaje mediante el cifrado o codificación del mensaje.</p><p>De todas las técnicas de programación segura, nosotros vamos a estudiar en este tema</p><ul><li>Las funciones de resumen (Hash)</li><li>El <strong>cifrado simétrico</strong> o de clave oculta</li><li>El <strong>cifrado asimétrico</strong> o de clave privada</li></ul><p>También estudiaremos cómo usar canales seguros de comunicación para nuestras aplicaciones, mediante el uso de sockets seguros empleando SSL/TLS.</p><p>Además, veremos una herramienta de seguridad que incorpora Java, las políticas de seguridad.</p><h2 id="objetivos" tabindex="-1">Objetivos</h2><p>Objetivos de esta unidad:</p><ul><li>Identificar principios y prácticas de programación segura.</li><li>Analizar técnicas y prácticas criptográficas.</li><li>Definir políticas de seguridad.</li><li>Emplear algoritmos criptográficos.</li><li>Utilizar sockets seguros para la transmisión de información.</li><li>Estudiar el funcionamiento de TLS/SSL sobre el protocolo TCP</li><li>Conocer herramientas de uso genérico en la criptografía</li></ul>',9),s={render:function(e,i){return r}}}}]);