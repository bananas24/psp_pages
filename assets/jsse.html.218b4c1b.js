import{_ as r}from"./VM_Options.cfaf4215.js";import{_ as u,r as o,o as k,c as d,d as a,a as n,w as e,b as s,f as m}from"./app.108f91ed.js";const v={},S=n("h1",{id:"_6-5-comunicaciones-seguras-en-java",tabindex:"-1"},"6.5 Comunicaciones seguras en Java",-1),b={class:"table-of-contents"},f=s("6.5.1. Protocolo SSL (Secure Sockets Layer)"),g=s("6.5.2. JSSE"),y=s("SSLSocket y SSLServerSocket"),h=s("keytool: certificados, confianza y almacenes de claves"),q=s("6.5.3. Servidor y Cliente SSL"),E=m(`<h2 id="_6-5-1-protocolo-ssl-secure-sockets-layer" tabindex="-1">6.5.1. Protocolo SSL (Secure Sockets Layer)</h2><p>SSL es el protocolo habitualmente usado para encriptar la comunicaci\xF3n cliente-servidor. Casi todo el tr\xE1fico de la red puede encriptarse con SSL: POP, IMAP, telnet, FTP, etc, pero es especialmente interesante para dotar de seguridad al protocolo HTTP, es decir como base del HTTPS.</p><p>La implementaci\xF3n de SSL es una extensi\xF3n de los sockets que permite establecer un canal (stream) de comunicaci\xF3n. Dicha comunicaci\xF3n se inicia con un <strong>handshake</strong> durante el cual, el cliente y el servidor construyen una session-key (clave sim\xE9trica encriptada con par de claves asim\xE9tricas) compartida para verificar su identidad mutua.</p><h2 id="_6-5-2-jsse" tabindex="-1">6.5.2. JSSE</h2><p>JSSE (Java Secure Socket Extension) es un conjunto de paquetes que permiten el desarrollo de aplicaciones seguras en Internet. Proporciona un marco y una implementaci\xF3n para Java de los protocolos SSL y TSL e incluye funcionalidad de</p><ul><li>encriptaci\xF3n de datos</li><li>autenticaci\xF3n de servidores</li><li>integridad de mensajes</li><li>autenticaci\xF3n de clientes</li></ul><p>Con JSSE, los programadores pueden ofrecer intercambio seguro de datos entre un cliente y un servidor que ejecuta un protocolo de aplicaci\xF3n, tales como HTTP, Telnet o FTP, a trav\xE9s de TCP/IP.</p><p>Las clases de JSSE se encuentran en los paquetes javax.net y javax.net.ssl.</p><h3 id="sslsocket-y-sslserversocket" tabindex="-1">SSLSocket y SSLServerSocket</h3><p>Las clases SSLSocket y SSLServerSocket representan sockets seguros y son derivadas de las ya conocidas Socket y ServerSocket respectivamente.</p><p>JSSE tiene dos clases SSLServerSocketFactory y SSLSocketFactory para la creaci\xF3n de sockets seguros. No tienen constructor, se obtienen a trav\xE9s del m\xE9todo est\xE1tico getDefault().</p><p>Para obtener un socket servidor seguro o <em>SSLServerSocket</em>:</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token class-name">SSLServerSocketFactory</span> sfact <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SSLServerSocketFactory</span><span class="token punctuation">)</span> <span class="token class-name">SSLServerSocketFactory</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SSLServerSocket</span> servidorSSL <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SSLServerSocket</span><span class="token punctuation">)</span> <span class="token operator">=</span> sfact<span class="token punctuation">.</span><span class="token function">createServerSocket</span><span class="token punctuation">(</span>puerto<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>El m\xE9todo <strong>createServerSocket(int puerto)</strong> devuelve un socket de servidor enlazado al puerto especificado.</p><p>Para crear un <em>SSLSocket</em>:</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token class-name">SSLSocketFactory</span> sfact <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SSLSocketFactory</span><span class="token punctuation">)</span> <span class="token class-name">SSLSocketFactory</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SSLSocket</span> <span class="token class-name">Cliente</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SSLSocket</span><span class="token punctuation">)</span> sfact<span class="token punctuation">.</span><span class="token function">createSocket</span><span class="token punctuation">(</span><span class="token class-name">Host</span><span class="token punctuation">,</span> puerto<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>El m\xE9todo createSocket (String host, int puerto) crea un socket y lo conecta con el host y el puerto especificados.</p><h3 id="keytool-certificados-confianza-y-almacenes-de-claves" tabindex="-1">keytool: certificados, confianza y almacenes de claves</h3><p>Cuando dos socket SSL, uno cliente y otro servidor, intentan establecer conexi\xF3n, tienen que &quot;presentarse&quot; el uno al otro y comprobar que el otro es de confianza. Si todo va bien y uno conf\xEDa en l otro, la conexi\xF3n se establece, en caso contrario, no se establece.</p><p>Para establecer esa confianza se debe crear un certificado en el servidor y a\xF1adirlo a los certificados de confianza del cliente.</p><ul><li>El servidor debe tener su propio certificado. Si no lo tenemos, se puede generar primero una pareja de claves con la herramienta <strong>keytool</strong>, que viene incluida en el JDK de Java. La herramienta guardar\xE1 la pareja de claves en un almac\xE9n (el cual tiene su propia clave).</li><li>Despu\xE9s generaremos un certificado a partir de esa pareja.</li><li>El c\xF3digo del servidor necesitar\xE1 indicar el fichero donde se almacenan las claves y la clave para acceder a ese almac\xE9n.</li><li>El cliente necesitar\xE1 indicar que conf\xEDa en el certificado del servidor. Dicho certificado del servidor puede estar guardado (por ejemplo) en el almac\xE9n de claves del cliente.</li></ul><p>::: info Seguridad mutua Aunque no suele hacerse tambi\xE9n podr\xEDa hacerse a la inversa y obligar al cliente a tener un certificado que el servidor pudiera importar, lo que aumentar\xEDa la seguridad. :::</p><p>Vamos a ver c\xF3mo realizar estas operaciones previas con la herramienta <strong>keytool</strong></p><p>Primero las acciones a realizar en el servidor</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># El servidor genera una pareja de claves que se almacena en un</span>
<span class="token comment"># fichero llamado &quot;clavesservidor&quot;. Dentro del fichero se indica</span>
<span class="token comment"># un alias para poder referirnos a esa clave f\xE1cilmente</span>
<span class="token comment"># keytool -genkey -keyalg RSA -alias servidor -keystore ClavesServidor -storepass 12345678</span>
<span class="token string">&quot;C:/Program Files/Java/jdk-11.0.11/bin/keytool.exe&quot;</span> <span class="token parameter variable">-genkey</span> <span class="token parameter variable">-keyalg</span> RSA <span class="token parameter variable">-alias</span> servidor <span class="token parameter variable">-keystore</span> ClavesServidor <span class="token parameter variable">-storepass</span> <span class="token number">12345678</span>
What is your first and last name?
  <span class="token punctuation">[</span>Unknown<span class="token punctuation">]</span>:  Vicente Martinez
What is the name of your organizational unit?
  <span class="token punctuation">[</span>Unknown<span class="token punctuation">]</span>:  Dpto. Informatica
What is the name of your organization?
  <span class="token punctuation">[</span>Unknown<span class="token punctuation">]</span>:  IES Doctor Balmis
What is the name of your City or Locality?
  <span class="token punctuation">[</span>Unknown<span class="token punctuation">]</span>:  Alicante
What is the name of your State or Province?
  <span class="token punctuation">[</span>Unknown<span class="token punctuation">]</span>:  Alicante
What is the two-letter country code <span class="token keyword">for</span> this unit?
  <span class="token punctuation">[</span>Unknown<span class="token punctuation">]</span>:  ES
Is <span class="token assign-left variable">CN</span><span class="token operator">=</span>Vicente Martinez, <span class="token assign-left variable">OU</span><span class="token operator">=</span>Dpto. Informatica, <span class="token assign-left variable">O</span><span class="token operator">=</span>IES Doctor Balmis, <span class="token assign-left variable">L</span><span class="token operator">=</span>Alicante, <span class="token assign-left variable">ST</span><span class="token operator">=</span>Alicante, <span class="token assign-left variable">C</span><span class="token operator">=</span>ES correct?
  <span class="token punctuation">[</span>no<span class="token punctuation">]</span>: <span class="token function">yes</span>

<span class="token comment"># El servidor genera su &quot;certificado&quot;, es decir un fichero que</span>
<span class="token comment"># de alguna forma indica quien es \xE9l. El certificado se almacena</span>
<span class="token comment"># en un fichero llamado clavesservidor y a partir de \xE9l queremos</span>
<span class="token comment"># generar el certificado de un alias creado previamente con nombre servidor</span>
<span class="token comment"># keytool -exportcert -alias servidor -file servidor.cer -keystore ClavesServidor</span>
<span class="token string">&quot;C:/Program Files/Java/jdk-11.0.11/bin/keytool.exe&quot;</span> <span class="token parameter variable">-exportcert</span> <span class="token parameter variable">-alias</span> servidor <span class="token parameter variable">-file</span> servidor.cer <span class="token parameter variable">-keystore</span> ClavesServidor
Enter keystore password:
Certificate stored <span class="token keyword">in</span> <span class="token function">file</span> <span class="token operator">&lt;</span>servidor.cer<span class="token operator">&gt;</span>
</code></pre></div><p>En la carpeta donde hemos ejecutado el comando keytool, se ha creado el almac\xE9n de claves en un fichero llamado <strong>ClavesServidor</strong> y el certificado exportado en el archivo <strong>servidor.cer</strong></p><p>y a continuaci\xF3n las que habr\xEDa que realizar en el cliente para generar el almac\xE9n de confianza que, en nuestro caso contenga el mismo certificado que hemos exportado del servidor.</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># Se importa el certificado del servidor indicando que pertenece a</span>
<span class="token comment"># la lista de certificados confiables.</span>
<span class="token comment"># keytool -importcert -trustcacerts -alias servidor -file servidor.cer -keystore clavescliente  -storepass 87654321</span>
<span class="token string">&quot;C:/Program Files/Java/jdk-11.0.11/bin/keytool.exe&quot;</span> <span class="token parameter variable">-importcert</span> <span class="token parameter variable">-trustcacerts</span> <span class="token parameter variable">-alias</span> servidor <span class="token parameter variable">-file</span> servidor.cer <span class="token parameter variable">-keystore</span> CertificadosConfianzaCliente <span class="token parameter variable">-storepass</span> <span class="token number">87654321</span>
Owner: <span class="token assign-left variable">CN</span><span class="token operator">=</span>Vicente Martinez, <span class="token assign-left variable">OU</span><span class="token operator">=</span>Dpto. Informatica, <span class="token assign-left variable">O</span><span class="token operator">=</span>IES Doctor Balmis, <span class="token assign-left variable">L</span><span class="token operator">=</span>Alicante, <span class="token assign-left variable">ST</span><span class="token operator">=</span>Alicante, <span class="token assign-left variable">C</span><span class="token operator">=</span>ES
Issuer: <span class="token assign-left variable">CN</span><span class="token operator">=</span>Vicente Martinez, <span class="token assign-left variable">OU</span><span class="token operator">=</span>Dpto. Informatica, <span class="token assign-left variable">O</span><span class="token operator">=</span>IES Doctor Balmis, <span class="token assign-left variable">L</span><span class="token operator">=</span>Alicante, <span class="token assign-left variable">ST</span><span class="token operator">=</span>Alicante, <span class="token assign-left variable">C</span><span class="token operator">=</span>ES
Serial number: 4eb6f2a5
Valid from: Mon Jan <span class="token number">24</span> 00:20:24 CET <span class="token number">2022</span> until: Sun Apr <span class="token number">24</span> 01:20:24 CEST <span class="token number">2022</span>
Certificate fingerprints:
         SHA1: DD:A2:75:4C:1C:BC:39:60:BE:B1:20:67:E1:5C:45:8C:48:B5:1F:54
         SHA256: <span class="token number">82</span>:C8:56:C2:DB:DE:8C:73:A9:21:C6:7D:DE:1F:39:4F:79:CC:5F:D5:10:BC:61:DA:E3:EE:E1:1D:21:EA:D2:33
Signature algorithm name: SHA256withRSA
Subject Public Key Algorithm: <span class="token number">2048</span>-bit RSA key
Version: <span class="token number">3</span>

Extensions:

<span class="token comment">#1: ObjectId: 2.5.29.14 Criticality=false</span>
SubjectKeyIdentifier <span class="token punctuation">[</span>
KeyIdentifier <span class="token punctuation">[</span>
0000: <span class="token number">16</span> AE <span class="token number">35</span> 7C <span class="token number">58</span> <span class="token number">97</span> B1 <span class="token number">95</span>   <span class="token number">91</span> 9B FA 6C 2A <span class="token number">80</span> D2 <span class="token number">90</span>  <span class="token punctuation">..</span><span class="token number">5</span>.X<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>l*<span class="token punctuation">..</span>.
0010: 1C <span class="token number">50</span> 7F C0                                        .P<span class="token punctuation">..</span>
<span class="token punctuation">]</span>
<span class="token punctuation">]</span>

Trust this certificate? <span class="token punctuation">[</span>no<span class="token punctuation">]</span>:  <span class="token function">yes</span>
Certificate was added to keystore
</code></pre></div><p>En esta ocasi\xF3n tambi\xE9n se crea, en la carpeta donde se ha ejecutado el comando keytool, un fichero <strong>CertificadosConfianzaCliente</strong> con el/los certificados de confianza para el cliente.</p><h2 id="_6-5-3-servidor-y-cliente-ssl" tabindex="-1">6.5.3. Servidor y Cliente SSL</h2><p>En le siguiente ejemplo podemos observar como la inicializaci\xF3n del ServerSocket es diferente, pero a partir de que se llama al m\xE9todo accept y, en este caso se obtiene una instancia de tipo SSLSocket, el resto del c\xF3digo es igual que con la clase Socket.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">U6S2_SSLServer</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arg<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

        <span class="token class-name">SSLSocket</span> clienteConectado <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">DataInputStream</span> flujoEntrada <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">//FLUJO DE ENTRADA DE CLIENTE</span>
        <span class="token class-name">DataOutputStream</span> flujoSalida <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">//FLUJO DE SALIDA AL CLIENTE</span>

        <span class="token comment">// Las propiedades se pueden especificar mediante c\xF3digo, o bien mediante</span>
        <span class="token comment">// argumentos de la JVM en la llamada a la aplicaci\xF3n</span>
        <span class="token comment">// System.setProperty(&quot;javax.net.ssl.keyStore&quot;, System.getProperty(&quot;user.dir&quot;) + &quot;\\\\ClavesServidor&quot;);</span>
        <span class="token comment">// System.setProperty(&quot;javax.net.ssl.keyStorePassword&quot;, &quot;12345678&quot;);</span>
        
        <span class="token comment">// Inicializaci\xF3n del ServerSocket SSL</span>
        <span class="token keyword">int</span> puerto <span class="token operator">=</span> <span class="token number">6000</span><span class="token punctuation">;</span>
        <span class="token class-name">SSLServerSocketFactory</span> sfact <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SSLServerSocketFactory</span><span class="token punctuation">)</span> <span class="token class-name">SSLServerSocketFactory</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SSLServerSocket</span> servidorSSL <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SSLServerSocket</span><span class="token punctuation">)</span> sfact<span class="token punctuation">.</span><span class="token function">createServerSocket</span><span class="token punctuation">(</span>puerto<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Esperando al cliente &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// Se espera la conexi\xF3n de un cliente con accept</span>
            clienteConectado <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SSLSocket</span><span class="token punctuation">)</span> servidorSSL<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// Trabajamos do DataInputStream y DataOutputStream para simplificar</span>
            <span class="token comment">// el c\xF3digo del ejemplo</span>
            flujoEntrada <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataInputStream</span><span class="token punctuation">(</span>clienteConectado<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            flujoSalida <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataOutputStream</span><span class="token punctuation">(</span>clienteConectado<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// El cliente env\xEDa un mensaje</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Recibiendo del CLIENTE: &quot;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&quot; \\n\\t&quot;</span> <span class="token operator">+</span> flujoEntrada<span class="token punctuation">.</span><span class="token function">readUTF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// El Servidor responde con un saludo</span>
            flujoSalida<span class="token punctuation">.</span><span class="token function">writeUTF</span><span class="token punctuation">(</span><span class="token string">&quot;Saludos al cliente del servidor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// CERRAR STREAMS Y SOCKETS</span>
        flujoEntrada<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        flujoSalida<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        clienteConectado<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        servidorSSL<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>En el cliente el proceso es el mismo, tras la llamada al m\xE9todo createSocket, obtenemos una instancia de SSLSocket que utilizamos igual que si fuese un Socket.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">U6S2_SSLClient</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arg<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>

        <span class="token class-name">SSLSocket</span> clienteSSL <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">DataInputStream</span> flujoEntrada <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">//FLUJO DE ENTRADA DE CLIENTE</span>
        <span class="token class-name">DataOutputStream</span> flujoSalida <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">//FLUJO DE SALIDA AL CLIENTE</span>

        <span class="token comment">// Las propiedades se pueden especificar mediante c\xF3digo, o bien mediante</span>
        <span class="token comment">// argumentos de la JVM en la llamada a la aplicaci\xF3n</span>
        <span class="token comment">// System.setProperty(&quot;javax.net.ssl.trustStore&quot;, System.getProperty(&quot;user.dir&quot;) + &quot;/CertificadosConfianzaCliente&quot;);</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;javax.net.ssl.trustStore&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;CertificadosConfianzaCliente&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;javax.net.ssl.trustStorePassword&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;87654321&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Inicializaci\xF3n del ServerSocket SSL</span>
        <span class="token keyword">int</span> puerto <span class="token operator">=</span> <span class="token number">6000</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> host <span class="token operator">=</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Programa Cliente iniciado....&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SSLSocketFactory</span> sfact <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SSLSocketFactory</span><span class="token punctuation">)</span> <span class="token class-name">SSLSocketFactory</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        clienteSSL <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SSLSocket</span><span class="token punctuation">)</span> sfact<span class="token punctuation">.</span><span class="token function">createSocket</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> puerto<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Trabajamos do DataInputStream y DataOutputStream para simplificar</span>
        <span class="token comment">// el c\xF3digo del ejemplo</span>
        flujoSalida <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataOutputStream</span><span class="token punctuation">(</span>clienteSSL<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        flujoEntrada <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataInputStream</span><span class="token punctuation">(</span>clienteSSL<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Env\xEDo un saludo al servidor</span>
        flujoSalida<span class="token punctuation">.</span><span class="token function">writeUTF</span><span class="token punctuation">(</span><span class="token string">&quot;Saludos al SERVIDOR DESDE EL CLIENTE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// El Servidor responde con un mensaje</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Recibiendo del SERVIDOR: \\n\\t&quot;</span> <span class="token operator">+</span> flujoEntrada<span class="token punctuation">.</span><span class="token function">readUTF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// CERRAR STREAMS Y SOCKETS</span>
        flujoEntrada<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        flujoSalida<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        clienteSSL<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">mostrarInformacionSesionSSL</span><span class="token punctuation">(</span><span class="token class-name">SSLSocket</span> cliente<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SSLPeerUnverifiedException</span> <span class="token punctuation">{</span>

        <span class="token comment">//------------------------------------------------------------------------------</span>
        <span class="token comment">//Ejemplo de la m\xFAltiple informaci\xF3n sobre la sesi\xF3n SSL</span>
        <span class="token comment">// que se puede obtener a partir </span>
        <span class="token class-name">SSLSession</span> session <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SSLSocket</span><span class="token punctuation">)</span> cliente<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Host: &quot;</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">getPeerHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Cifrado: &quot;</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">getCipherSuite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Protocolo: &quot;</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">getProtocol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;IDentificador:&quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>session<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Creaci\xF3n de la sesi\xF3n: &quot;</span> <span class="token operator">+</span> session<span class="token punctuation">.</span><span class="token function">getCreationTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">X509Certificate</span> certificate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">X509Certificate</span><span class="token punctuation">)</span> session<span class="token punctuation">.</span><span class="token function">getPeerCertificates</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Propietario: &quot;</span> <span class="token operator">+</span> certificate<span class="token punctuation">.</span><span class="token function">getSubjectDN</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Algoritmo: &quot;</span> <span class="token operator">+</span> certificate<span class="token punctuation">.</span><span class="token function">getSigAlgName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Tipo: &quot;</span> <span class="token operator">+</span> certificate<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Emisor: &quot;</span> <span class="token operator">+</span> certificate<span class="token punctuation">.</span><span class="token function">getIssuerDN</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;N\xFAmero Serie: &quot;</span> <span class="token operator">+</span> certificate<span class="token punctuation">.</span><span class="token function">getSerialNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//-----------------------------------------------------------------------------</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Si ejecutamos el cliente y el servidor directamente, obtendremos el siguiente error</p><div class="language-bash ext-sh"><pre class="language-bash"><code>Programa Cliente iniciado<span class="token punctuation">..</span><span class="token punctuation">..</span>
Exception <span class="token keyword">in</span> thread <span class="token string">&quot;main&quot;</span> javax.net.ssl.SSLHandshakeException: Received fatal alert: handshake_failure
</code></pre></div><p>Para ejecutar el programa servidor es necesario indicar el certificado que se utilizar\xE1.</p><p>Lo podemos indicar a la hora de ejecutar el programa, a\xF1adiendo a la l\xEDnea de comandos</p><blockquote><p>java -Djavax.net.ssl.keyStore=ClavesServidor -Djavax.net.ssl.keyStorePassword=12345678</p></blockquote><p>y en el programa cliente es necesario indicar la ubicaci\xF3n de los certificados de confianza</p><blockquote><p>java -Djavax.net.ssl.trustStore=CertificadosConfianzaCliente -Djavax.net.ssl.trustStorePassword=87654321</p></blockquote><p><img src="`+r+'" alt="Netbeans: Opciones de la JVM"></p><p>::: info Par\xE1metros de JVM o c\xF3digo En el c\xF3digo anterior hay unas l\xEDneas comentadas que especifican c\xF3mo podemos configurar el valor de las propiedades desde c\xF3digo mediante el uso del m\xE9todo System.setProperty(String propiedad, String valor).</p><p>En el programa servidor incluir\xEDamos las siguientes l\xEDneas:</p><p>System.setProperty(&quot;javax.net.ssl.keyStore&quot;, &quot;ClavesServidor&quot;); System.setProperty(&quot;javax.net.ssl.keyStorePassword&quot;, &quot;12345678&quot;);</p><p>Y en el programa cliente ser\xEDan estas:</p><p>System.setProperty(&quot;javax.net.ssl.trustStore&quot;, &quot;CertificadosConfianzaCliente&quot;); System.setProperty(&quot;javax.net.ssl.trustStorePassword&quot;, &quot;87654321&quot;);</p><p>Adem\xE1s del nombre, podemos indicar la ruta donde se encuentran los almacenes, recordando que NO ES RECOMENDABLE el uso de barras invertidas para indicar rutas. :::</p><p>Una vez hechos los cambios, bien en las opciones de la JVM o bien en el c\xF3digo de las aplicaciones, la salida que obtendremos ser\xE1 esta</p>',49),C=n("div",{class:"language-bash ext-sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("Esperando al cliente "),n("span",{class:"token number"},"1"),s(`
Recibiendo del CLIENTE: `),n("span",{class:"token number"},"1"),s(` 
	Saludos al SERVIDOR DESDE EL CLIENTE
Esperando al cliente `),n("span",{class:"token number"},"2"),s(`
Recibiendo del CLIENTE: `),n("span",{class:"token number"},"2"),s(` 
	Saludos al SERVIDOR DESDE EL CLIENTE
Esperando al cliente `),n("span",{class:"token number"},"3"),s(`
`)])])],-1),L=n("div",{class:"language-bash ext-sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("Programa Cliente iniciado"),n("span",{class:"token punctuation"},".."),n("span",{class:"token punctuation"},".."),s(`
Recibiendo del SERVIDOR: 
	Saludos al cliente del servidor
`)])])],-1),j=n("div",{class:"custom-container warning"},[n("p",{class:"custom-container-title"},"Default trusted certificates"),n("p",null,"Whenever Java attempts to connect to another application over SSL (e.g.: HTTPS, IMAPS, LDAPS), it will only be able to connect to that application if it can trust it. The way trust is handled in the Java world is that you have a keystore (typically $JAVA_HOME/lib/security/cacerts), also known as the truststore. This contains a list of all known Certificate Authority (CA) certificates, and Java will only trust certificates that are signed by one of those CAs or public certificates that exist within that keystore."),n("p",null,"If -Djavax.net.ssl.trustStore has been configured, it will override the location of the default truststore, which will need to be checked.")],-1);function D(w,_){const c=o("DownloadPDF-component"),l=o("DocumentCover-component"),t=o("router-link"),p=o("CodeGroupItem"),i=o("CodeGroup");return k(),d("div",null,[a(c),a(l,{titulo:"6.5 Comunicaciones seguras en Java"}),S,n("nav",b,[n("ul",null,[n("li",null,[a(t,{to:"#_6-5-1-protocolo-ssl-secure-sockets-layer"},{default:e(()=>[f]),_:1})]),n("li",null,[a(t,{to:"#_6-5-2-jsse"},{default:e(()=>[g]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#sslsocket-y-sslserversocket"},{default:e(()=>[y]),_:1})]),n("li",null,[a(t,{to:"#keytool-certificados-confianza-y-almacenes-de-claves"},{default:e(()=>[h]),_:1})])])]),n("li",null,[a(t,{to:"#_6-5-3-servidor-y-cliente-ssl"},{default:e(()=>[q]),_:1})])])]),E,a(i,null,{default:e(()=>[a(p,{title:"Servidor",active:""},{default:e(()=>[C]),_:1}),a(p,{title:"Cliente"},{default:e(()=>[L]),_:1})]),_:1}),j])}const I=u(v,[["render",D],["__file","jsse.html.vue"]]);export{I as default};
