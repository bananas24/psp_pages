import{_ as e}from"./Collections_class_diagram.8db4bff0.js";import{_ as t,r as a,o as r,c,d as n,e as A,a as s,b as o,f as y}from"./app.99f76219.js";const i={},B=s("h1",{id:"_3-6-annex-ii-arraylist-cheat-sheet-by-students",tabindex:"-1"},"3.6 Annex II - ArrayList cheat sheet by students",-1),D=s("div",{class:"custom-container info"},[s("p",{class:"custom-container-title"},"Autor\xEDa"),s("p",null,[o("Esto es un extracto del trabajo "),s("em",null,"Reto I (Challenge I)"),o(" realizado por mis alumnos como parte del m\xF3dulo de PSP. He tomado partes de los diferentes trabajos entregados para complementar la informaci\xF3n a la que podr\xE9is acceder durante los ex\xE1menes.")]),s("p",null,"Gracias a todos.")],-1),d=s("p",null,"Para los ejemplos vamos a trabajar con la siguiente clase",-1),E=s("p",null,[s("img",{src:e,alt:"Diagrama de clases"})],-1),u=y(`<div class="pagebreak"></div><h2 id="a-definicion-y-creacion" tabindex="-1">A. Definici\xF3n y creaci\xF3n</h2><p>Una colecci\xF3n representa un grupo de objetos. Esto objetos son conocidos como elementos. Cuando queremos trabajar con un conjunto de elementos, necesitamos un almac\xE9n donde poder guardarlos. En Java, se emplea la interfaz gen\xE9rica <code>Collection</code> para este prop\xF3sito. Gracias a esta interfaz, podemos almacenar cualquier tipo de objeto y podemos usar una serie de m\xE9todos comunes, como pueden ser: a\xF1adir, eliminar, obtener el tama\xF1o de la colecci\xF3n.</p><p>Partiendo de la interfaz gen\xE9rica Collection extienden otra serie de interfaces gen\xE9ricas. Estas subinterfaces aportan distintas funcionalidades sobre la interfaz anterior.</p><p>La clase ArrayList en Java permite almacenar datos en memoria de forma similar a los Arrays con la ventaja de que el numero de elementos que almacena lo hace de forma din\xE1mica, es decir, que no es necesario declarar su tama\xF1o como pasa con los Arrays. Los elementos pueden a\xF1adirse o eliminarse seg\xFAn necesidad.</p><h3 id="a-1-constructores-de-arraylist" tabindex="-1">A.1. Constructores de ArrayList</h3><p>ArrayList proporciona 3 constructores que definen la capacidad inicial de la colecci\xF3n o si la inicializamos a partir de los valores de otra colecci\xF3n.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;font-style:italic;">// Crea una instancia de ArrayList vac\xEDa.</span></span>
<span class="line"><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> listaPersonas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;">// ArrayList(int initialCapacity). Crea una instancia de ArrayList con una capacidad inicial especificada. </span></span>
<span class="line"><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> listaPersonas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;(</span><span style="color:#F76D47;">10</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;">// ArrayList(Collection c). Crea una instancia de ArrayList a partir de otra colecci\xF3n de datos. Los datos se a\xF1aden en el orden en el que el Iterator de la otra colecci\xF3n los recorra.</span></span>
<span class="line"><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> listaPersonas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;(</span><span style="color:#90A4AE;">c</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="b-metodos-y-propiedades-generales" tabindex="-1">B. M\xE9todos y propiedades generales</h2><p>Partiendo de una serie de objetos, vamos a ver el resultado que obtendr\xEDamos con la ejecuci\xF3n de estos m\xE9todos</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p1 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Manuel</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Garc\xEDa</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">44</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.74d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">80</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Juan</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Mart\xEDnez</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">65</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.84d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">82</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p3 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre3</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido3</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">52</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.70d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">66</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p4 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre4</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido4</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">23</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.96d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">98</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Mujer</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="b-1-creacion-de-un-arraylist" tabindex="-1">B.1. Creaci\xF3n de un ArrayList</h3><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Crear un ArrayList de Personas</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> listaPersonas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;();</span></span>
<span class="line"></span></code></pre></div><h3 id="b-2-anadir-y-eliminar-elementos" tabindex="-1">B.2. A\xF1adir y eliminar elementos</h3><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// A\xF1adir un objeto Persona al final del ArrayList</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// A\xF1ade el elemento al ArrayList en la posici\xF3n &#39;n+1&#39;. </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Cuidado, no podemos insertar en posiciones que no existen.</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#F76D47;">1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Borra el elemento de la posici\xF3n &#39;n+1&#39; del ArrayList   </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Cuidado, no podemos eliminar de posiciones que no existen.</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#F76D47;">2</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Borra el primer objeto pasado encontrado en el ArrayList que se le pasa como par\xE1metro.  </span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">  </span></span>
<span class="line"></span></code></pre></div><div class="custom-container info"><p class="custom-container-title">Duplicados</p><p>Si ya existe un elemento en el ArrayList, esta colecci\xF3n no controla la existencia de duplicados, por lo que tendremos el mismo objeto en dos posiciones diferentes. Podemos evitarlo comprobando previamente si ya existe ese objeto, como veremos a continuaci\xF3n.</p></div><h3 id="b-3-comprobar-si-un-elemento-ya-existe" tabindex="-1">B.3. Comprobar si un elemento ya existe</h3><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Comprueba si existe del objeto que se le pasa como par\xE1metro</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">contains</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p4</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Devuelve la posici\xF3n del primer objeto pasado encontrado en el ArrayList  </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Si no lo encuentra, devuelve -1</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">indexOf</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Devuelve la posici\xF3n del \xFAltimo objeto pasado en el ArrayList   </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Si no lo encuentra, devuelve -1</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">lastIndexOf</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="b-4-acceder-a-un-elemento-del-arraylist" tabindex="-1">B.4. Acceder a un elemento del ArrayList</h3><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Devuelve el elemento que esta en la posici\xF3n &#39;n+1&#39; del ArrayList</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">get</span><span style="color:#39ADB5;">(</span><span style="color:#F76D47;">2</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="b-5-otras-funciones-de-utilidad" tabindex="-1">B.5. Otras funciones de utilidad</h3><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Devuelve el numero de elementos del ArrayList</span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">size</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">//Borra todos los elementos de ArrayList   </span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">clear</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Devuelve true si el ArrayList esta vac\xEDo. Sino Devuelve false   </span></span>
<span class="line"><span style="color:#90A4AE;">  listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">isEmpty</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Pasa el ArrayList a un Array </span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Object</span><span style="color:#39ADB5;">[]</span><span style="color:#90A4AE;"> array </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> listaPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toArray</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="c-anadir-datos-a-un-arraylist" tabindex="-1">C. A\xF1adir datos a un ArrayList</h2><div class="custom-container info"><p class="custom-container-title">Orden de los elementos en un ArrayList</p><p>Cuando a\xF1adimos elementos a un ArrayList, el orden de inserci\xF3n se conserva.</p><p>Una Lista, por definici\xF3n, siempre mantiene el orden de los elementos. Esto no es solo para ArrayList, sino para todo tipo de listas como LinkedList, Vector, y el resto de clases que implementan el interfaz <code>java.util.List</code> .</p></div><h3 id="c-1-anadir-elementos-desde-el-constructor" tabindex="-1">C.1. A\xF1adir elementos desde el constructor</h3><p>A la hora de crear el ArrayList, podemos a\xF1adirle datos, usando la sintaxis del doble corchete o bien con la construcci\xF3n List.of o Arrays.asList</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Crea una nueva lista y a la vez la inicializa con valores  </span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> lista1 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{{</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p2</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// En este caso indicamos los valores como si de par\xE1metros se tratase</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// De esta forma podemos a\xF1adir hasta un m\xE1ximo de 10 elementos</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> lista2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;(</span></span>
<span class="line"><span style="color:#90A4AE;">        List</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">of</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p2</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p3</span><span style="color:#39ADB5;">)</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// De forma similar al caso anterior, con una construcci\xF3n a partir de un Array</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> lista3 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;(</span></span>
<span class="line"><span style="color:#90A4AE;">        Arrays</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">asList</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p2</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p3</span><span style="color:#39ADB5;">)</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">       </span></span>
<span class="line"></span></code></pre></div><h3 id="c-2-anadir-elementos-desde-otras-colecciones" tabindex="-1">C.2. A\xF1adir elementos desde otras colecciones</h3><p>Podemos inicializar un ArrayList, como hemos visto en los ejemplos anteriores, desde varios tipos de colecciones (listas) que poseen caracter\xEDsticas similares.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Partiendo del c\xF3digo anterior, creamos un nuevo ArrayList a partir de lista2</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> lista4 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;(</span><span style="color:#90A4AE;">lista3</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// A\xF1ade todos los elementos de la lista que indiquemos como argumento al final del ArrayList</span></span>
<span class="line"><span style="color:#90A4AE;">  lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">addAll</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">lista3</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Hace lo mismo, pero lo inserta en la posici\xF3n indicada (debe existir al menos la posici\xF3n anterior)  </span></span>
<span class="line"><span style="color:#90A4AE;">  lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">addAll</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">lista3</span><span style="color:#39ADB5;">,</span><span style="color:#F76D47;">2</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="c-3-anadir-eliminar-elementos-desde-codigo" tabindex="-1">C.3. A\xF1adir / eliminar elementos desde c\xF3digo</h3><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// A\xF1adir un elemento al final de la lista</span></span>
<span class="line"><span style="color:#90A4AE;">  lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p4</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// A\xF1ade un elemento en la posici\xF3n indicada. El elemento que ocupaba esa posici\xF3n y todos los que hab\xEDa detr\xE1s, se mueven una posici\xF3n a la derecha.</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// En el ejemplo, inserta p1 al principio de la lista.</span></span>
<span class="line"><span style="color:#90A4AE;">  lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#F76D47;">0</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">   </span><span style="color:#90A4AE;font-style:italic;">// Inserta p1 al principio de la lista.</span></span>
<span class="line"><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Eliminar un elemento. Si existe lo elimina y devuelve true, si no devuelve false</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">boolean</span><span style="color:#90A4AE;"> existe </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Eliminar un elemento por \xEDndice. Si la clave existe devuelve el valor asociado, si no devuelve null</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> eliminada </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#F76D47;">2</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Elimina del ArrayList todos aquellos elementos que coinciden con los indicados en la lista que pasamos como argumento </span></span>
<span class="line"><span style="color:#90A4AE;">  lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">removeAll</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">lista3</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Elimina del ArrayList todos aquellos elementos que cumplen con el predicado (la condici\xF3n) descrita como argumento en el m\xE9todo e indicada como expresi\xF3n lambda</span></span>
<span class="line"><span style="color:#90A4AE;">  lista4</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">removeIf</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getEdad</span><span style="color:#39ADB5;">()&lt;</span><span style="color:#F76D47;">18</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">   </span><span style="color:#90A4AE;font-style:italic;">// Elimina los menores de 18</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="d-recorrer-la-coleccion" tabindex="-1">D. Recorrer la colecci\xF3n</h2><p>Vamos a preparar un ArrayList para recorrerlo y usarlo en los siguientes apartados</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// ArrayList creation</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> grupoPersonas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre1</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido1</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">35</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.66d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">71</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Mujer</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre2</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido2</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">40</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.84d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">88</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Mujer</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre3</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido3</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">52</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.70d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">66</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre4</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido4</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">23</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.96d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">98</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Mujer</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre5</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido5</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">16</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.55d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">60</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre6</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido6</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">20</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.75d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">74</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}};</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><h3 id="d-1-usando-un-bucle-for" tabindex="-1">D.1. Usando un bucle for</h3><p>Con el bucle for iteramos de forma natural accediendo a los elementos por \xEDndice</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">int</span><span style="color:#90A4AE;"> i </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">0</span><span style="color:#39ADB5;">;</span><span style="color:#90A4AE;"> i </span><span style="color:#39ADB5;">&lt;</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">size</span><span style="color:#39ADB5;">();</span><span style="color:#90A4AE;"> i</span><span style="color:#39ADB5;">++)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">get</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">i</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="d-2-usando-un-bucle-foreach-de-java" tabindex="-1">D.2. Usando un bucle foreach de Java</h3><p>Otra forma de recorrer el ArrayList es con un bucle similar al foreach de C#, aunque con el formato de un bucle for, pero en este caso indicando for(elemento : colecci\xF3n)</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">    </span><span style="color:#90A4AE;font-style:italic;">// Obtenemos un objeto de tipo Persona en cada iteraci\xF3n del bucle</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">        System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="d-3-usando-iterator" tabindex="-1">D.3. Usando Iterator</h3><p>El interface Iterator de Java permite movernos por una colecci\xF3n y acceder a sus elementos</p><div class="custom-container info"><p class="custom-container-title">java.lang.Iterator</p><p>Todas las colecciones de Java incluyen un m\xE9todo iterator() que devuelve una instancia de Iterator para recorrer la colecci\xF3n.</p><p>Iterator tiene 4 m\xE9todos:</p><ul><li><strong>hasNext()</strong> - devuelve true si hay un elemento m\xE1s en la lista</li><li><strong>next()</strong> - devuelve el siguiente elemento de la lista</li><li><strong>remove()</strong> - elimina el \xFAltimo elemento de la lista que hemos obtenido con next()</li><li><strong>forEachRemaining()</strong> - realiza la acci\xF3n indicada con cada uno de los elementos que quedan por recorrer de la lista</li></ul></div><p>Vamos a ver un ejemplo con los valores de la lista</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Iterator</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> iterator </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">iterator</span><span style="color:#39ADB5;">();</span><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">while</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">iterator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">hasNext</span><span style="color:#39ADB5;">())</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">iterator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">next</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="d-4-usando-el-metodo-foreach-con-expresiones-lambda" tabindex="-1">D.4. Usando el m\xE9todo forEach con expresiones lambda</h3><p>En este caso aprovechamos el m\xE9todo foreach de las colecciones para poder realizar una acci\xF3n concreta sobre cada uno de los elementos de la misma.</p><p>De forma similar al bucle foreach, indicamos un elemento de la lista y la acci\xF3n a realizar sobre el mismo</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Para cada persona (p) -&gt; Acci\xF3n a realizar</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">));</span></span>
<span class="line"></span></code></pre></div><h3 id="d-5-eliminando-modificando-elementos-mientras-se-itera-sobre-la-coleccion" tabindex="-1">D.5 Eliminando / Modificando elementos mientras se itera sobre la colecci\xF3n</h3><p>Mientras se est\xE1 recorriendo una colecci\xF3n, no con todos los tipos de bucles se puede modificar (a\xF1adir/eliminar elementos) de la colecci\xF3n. Vamos a ver el comportamiento de cada uno de ellos.</p><h4 id="d-5-1-con-un-bucle-for" tabindex="-1">D.5.1 Con un bucle for</h4><p>En este caso no tendr\xEDamos problemas. Al acceder por \xEDndice, podemos a\xF1adir o eliminar elementos mientras se recorre la colecci\xF3n.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">int</span><span style="color:#90A4AE;"> i </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">0</span><span style="color:#39ADB5;">;</span><span style="color:#90A4AE;"> i </span><span style="color:#39ADB5;">&lt;</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">size</span><span style="color:#39ADB5;">();</span><span style="color:#90A4AE;"> i</span><span style="color:#39ADB5;">++)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">get</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">i</span><span style="color:#39ADB5;">).</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Jordi</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">i</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="d-5-2-con-un-bucle-foreach-de-java" tabindex="-1">D.5.2 Con un bucle foreach de Java</h4><div class="custom-container danger"><p class="custom-container-title">No modificable mientras se recorre</p><p>Si intentamos eliminar un elemento mientras lo recorremos con foreach, provocaremos una <code>java.util.ConcurrentModificationException</code>. Por lo tanto, s\xF3lo debemos usar este bucle si queremos leer sus elementos sin modificar la estructura de la colecci\xF3n.</p></div><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getPeso</span><span style="color:#39ADB5;">()&gt;</span><span style="color:#F76D47;">100</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">    System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Eliminada: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="d-5-3-con-iterator" tabindex="-1">D.5.3 Con Iterator</h4><p>Siempre que usemos el m\xE9todo remove de Iterator para eliminar elementos de la colecci\xF3n mientras la recorremos, podremos hacerlo sin que se genere ninguna excepci\xF3n.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Iterator</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> iterator </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">iterator</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">while</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">iterator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">hasNext</span><span style="color:#39ADB5;">())</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> iterator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">next</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getAltura</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&lt;</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">100</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#39ADB5;">      </span><span style="color:#90A4AE;font-style:italic;">// Si borramos usando iterator.remove funciona</span></span>
<span class="line"><span style="color:#90A4AE;">      iterator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br></div></div><h4 id="d-5-4-con-el-metodo-foreach-y-expresiones-lambda" tabindex="-1">D.5.4 Con el m\xE9todo forEach y expresiones lambda</h4><div class="custom-container danger"><p class="custom-container-title">No modificable mientras se recorre</p><p>Si intentamos eliminar un elemento mientras lo recorremos con foreach, provocaremos una <code>java.util.ConcurrentModificationException</code>. Por lo tanto, s\xF3lo debemos usar este bucle si queremos leer sus elementos sin modificar la estructura de la colecci\xF3n.</p></div><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Elimina si encuentra un elemento concreto</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Jordi</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);});</span></span>
<span class="line"></span></code></pre></div><p>Otra cosa es que intentemos hacer cambios en los valores de la colecci\xF3n, por ejemplo, intercambiar los apellidos</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Intercambia los apellidos de todas las personas</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#9C3EDA;">String</span><span style="color:#90A4AE;"> aux </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getApellidos</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">      p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">setApellidos</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#90A4AE;">      p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">setNombre</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">aux</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">                </span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="e-busqueda-de-elementos" tabindex="-1">E. B\xFAsqueda de elementos</h2><p>Para buscar elementos en un ArrayList hay distintas formas de hacerlo. Desde los propios m\xE9todos que nos ofrece la clase hasta el uso de API Stream. Vamos a describir cada uno de ellos</p><h3 id="e-1-busqueda-usando-los-metodos-de-la-clase" tabindex="-1">E.1. B\xFAsqueda usando los m\xE9todos de la clase</h3><p>La clase ArrayList nos ofrece diferentes alternativas para buscar y/o saber si un elemento est\xE1 presente en la colecci\xF3n. As\xED, podemos usar los m\xE9todos</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Comprobar si est\xE1 el objeto en la colecci\xF3n</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">boolean</span><span style="color:#90A4AE;"> existe </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">contains</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// O simplemente obtener su posici\xF3n, si lo encuentra</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">indexOf</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">lastIndexOf</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="e-2-busqueda-por-el-valor-de-una-propiedad" tabindex="-1">E.2. B\xFAsqueda por el valor de una propiedad</h3><p>A diferencia del caso anterior, si queremos buscar un objeto que contenga un valor concreto en un campo, debemos recorrer la colecci\xF3n hasta encontrarlo. Para eso, una de las alternativas es usar alguno de los bucles vistos anteriormente.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Iterator</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> it </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">iterator</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">while</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">it</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">hasNext</span><span style="color:#39ADB5;">())</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> it</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">next</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Jorge</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#39ADB5;">      </span><span style="color:#90A4AE;font-style:italic;">// Se puede obtener el elemento o bien modificarlo</span></span>
<span class="line"><span style="color:#90A4AE;">      System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Encontrado: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#39ADB5;font-style:italic;">break</span><span style="color:#39ADB5;">;</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="e-3-busqueda-usando-expresiones-lambda" tabindex="-1">E.3. B\xFAsqueda usando expresiones lambda</h3><p>Mediante expresiones lambda, podemos incluir una condicional que nos haga el filtrado de elementos que deseemos</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Puede haber m\xE1s de un elemento que cumpla el criterio de b\xFAsqueda</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Jorge</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#39ADB5;">      </span><span style="color:#90A4AE;font-style:italic;">// Se puede obtener el elemento o bien modificarlo</span></span>
<span class="line"><span style="color:#90A4AE;">      System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Encontrado:: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="e-4-busqueda-usando-api-stream" tabindex="-1">E.4. B\xFAsqueda usando API Stream</h3><p>En este tipo de acciones es donde ya podemos empezar a ver la potencia que ofrece el API Stream para el manejo y gesti\xF3n de las colecciones. Podemos emplear varios m\xE9todos, como filter, findAny, findFirst, allMatch, anyMatch, count, distinct. Como veremos en el siguiente apartado, esos resultados los podemos guardar en forma de subcolecci\xF3n</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Puede haber m\xE1s de un elemento que cumpla el criterio de b\xFAsqueda</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Obtener un subarray con los elementos que cumplan el criterio</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getAltura</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">170</span><span style="color:#39ADB5;">)</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toList</span><span style="color:#39ADB5;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// O bien recorrer la lista de entradas obtenidas</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getAltura</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">170</span><span style="color:#39ADB5;">)</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toList</span><span style="color:#39ADB5;">()))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">   </span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getAltura</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">170</span><span style="color:#39ADB5;">)</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toList</span><span style="color:#39ADB5;">()))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">        </span><span style="color:#90A4AE;font-style:italic;">// Muestra solo la persona</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Saber cu\xE1ntos cumplen el criterio de b\xFAsqueda</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getAltura</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">170</span><span style="color:#39ADB5;">).</span><span style="color:#6182B8;">count</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Obtener el primero que cumpla el criterio, si es que hay alguno</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Optional</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> first </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getAltura</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">170</span><span style="color:#39ADB5;">)</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">findFirst</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Obtener cualquiera que cumpla el criterio, o null si no hay ninguno</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> any </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getAltura</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">170</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;">                </span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">findAny</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">orElse</span><span style="color:#39ADB5;">(null);</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="f-obtencion-de-subcolecciones" tabindex="-1">F. Obtenci\xF3n de subcolecciones</h2><p>Lo podemos considerar un tipo especial de b\xFAsqueda en el que el objetivo es conseguir una colecci\xF3n con los elementos que cumplan un determinado criterio.</p><p>As\xED, la forma de buscar es id\xE9ntica a la del apartado anterior, pero en este caso lo que obtendremos de esa b\xFAsqueda ser\xE1 una nueva lista con un subconjunto de elementos de la original</p><h3 id="f-1-subcolecciones-usando-bucles" tabindex="-1">F.1. Subcolecciones usando bucles</h3><p>Para obtener los elementos podemos aplicar lo aprendido en el anterior punto. Buscaremos elemento a elemento y, cuando se cumpla una condici\xF3n especificada, a\xF1adiremos los elementos encontrados a una nueva colecci\xF3n.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Personas cuyo nombre empieza por &quot;M&quot;</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> personas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">startsWith</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      personas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="f-2-subcolecciones-usando-expresiones-lambda" tabindex="-1">F.2. Subcolecciones usando expresiones lambda</h3><p>La idea es similar al punto anterior</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Personas cuyo nombre empieza por &quot;M&quot;</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> personas2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;();</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">startsWith</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      personas2</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">add</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="f-3-subcolecciones-usando-api-stream" tabindex="-1">F.3. Subcolecciones usando API Stream</h3><p>Podemos obtener directamente una subcolecci\xF3n mediante el filtrado, haciendo subconjuntos y guardando el resultado.</p><p>Con API Stream podemos guardar el resultado usando diferentes formas de .collect, que dar\xE1n como resultados distintos tipos de colecciones.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// ArrayList de Personas cuyo nombre empieza por &quot;M&quot;</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> personas3 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#90A4AE;">Persona</span><span style="color:#39ADB5;">&gt;)</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">startsWith</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toList</span><span style="color:#39ADB5;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Conjunto de Personas cuyo nombre empieza por &quot;M&quot;</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Set</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> personas4 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">startsWith</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toSet</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Mapa de Personas cuyo nombre empieza por &quot;M&quot;</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// En la construcci\xF3n del mapa, hay que elegir un campo que sirva de clave</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Map</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> personas5 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">startsWith</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toMap</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Persona</span><span style="color:#39ADB5;font-style:italic;">::</span><span style="color:#90A4AE;">getApellidos</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> Function</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">identity</span><span style="color:#39ADB5;">()));</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="g-ordenacion-de-elementos" tabindex="-1">G. Ordenaci\xF3n de elementos</h2><h3 id="g-1-ordenar-usando-metodos-de-collection" tabindex="-1">G.1. Ordenar usando m\xE9todos de Collection</h3><p>Si lo que queremos es tener el conjunto ordenados, la forma m\xE1s f\xE1cil es ordenarla usando el m\xE9todo sort() de Collection.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Ordena seg\xFAn el m\xE9todo compareTo sobrescrito al implementar el interfaz Comparable</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Si no se ha implementado, ordena seg\xFAn el orden natural</span></span>
<span class="line"><span style="color:#90A4AE;">  Collections</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">sort</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Ordena por un campo cualquiera que indiquemos</span></span>
<span class="line"><span style="color:#90A4AE;">  Collections</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">sort</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> Comparator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">comparing</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Persona</span><span style="color:#39ADB5;font-style:italic;">::</span><span style="color:#90A4AE;">getApellidos</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Con Comparator tenemos disponibles varios comparadores (naturalOrder, reverseOrder, nullsFirst, ....)</span></span>
<span class="line"></span></code></pre></div><div class="custom-container info"><p class="custom-container-title">Interfaz Comparable</p><p>Para que la primera forma de sort funcione, la clase Persona debe implementar el interfaz Comparable y sobrescribir su m\xE9todo <code>compareTo</code> para definir la forma de ordenar los objetos de tipo Persona.</p><p>Veremos m\xE1s adelante que tenemos formas de definir el comparador usando expresiones lambda o APi Stream, permitiendo mayor flexibilidad a la hora de comparar elementos.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Un ejemplo, si queremos ordenar a las personas por edad</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">@</span><span style="color:#9C3EDA;">Override</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#9C3EDA;">public</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">int</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">compareTo</span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Object</span><span style="color:#90A4AE;"> o</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span><span style="color:#90A4AE;">        </span></span>
<span class="line"><span style="color:#90A4AE;">        </span><span style="color:#39ADB5;font-style:italic;">return</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">Integer</span><span style="color:#39ADB5;">)this.</span><span style="color:#6182B8;">getEdad</span><span style="color:#39ADB5;">()).</span><span style="color:#6182B8;">compareTo</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">Integer</span><span style="color:#39ADB5;">)((</span><span style="color:#90A4AE;">Persona</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;">o</span><span style="color:#39ADB5;">).</span><span style="color:#6182B8;">getEdad</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div></div><h3 id="g-2-ordenar-con-expresiones-lambda" tabindex="-1">G.2. Ordenar con expresiones lambda</h3><p>De esta forma no es necesario implementar el interfaz Comparable, ya que podemos indicar la comparaci\xF3n que queremos hacer como par\xE1metro del m\xE9todo sort.</p><p>As\xED podemos tener distintas formas de ordenar, seg\xFAn nos convenga.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Indicamos la comparaci\xF3n que queremos hacer. Podemos usar compareTo </span></span>
<span class="line"><span style="color:#90A4AE;">  Collections</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">sort</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">e1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> e2</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">Integer</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;">e1</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getEdad</span><span style="color:#39ADB5;">()).</span><span style="color:#6182B8;">compareTo</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">e2</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getEdad</span><span style="color:#39ADB5;">()));</span></span>
<span class="line"><span style="color:#90A4AE;">  System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">      </span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// o bien podemos definir nuestro propio comparador</span></span>
<span class="line"><span style="color:#90A4AE;">  Collections</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">sort</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p2</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#9C3EDA;">String</span><span style="color:#90A4AE;"> nombreCompleto1 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> p1</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getApellidos</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">, </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> p1</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#9C3EDA;">String</span><span style="color:#90A4AE;"> nombreCompleto2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> p2</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getApellidos</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">, </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> p2</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">return</span><span style="color:#90A4AE;"> nombreCompleto1</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">compareTo</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">nombreCompleto2</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="g-3-ordenar-con-api-stream" tabindex="-1">G.3. Ordenar con API Stream</h3><p>Con API Stream usamos tambi\xE9n el m\xE9todo sorted para indicar qu\xE9 comparaci\xF3n se debe realizar. Tenemos varias opciones en funci\xF3n del tipo de dato que pasemos.</p><p>Como en el caso anterior, el m\xE1s flexible es aquel en el que indicamos, mediante una expresi\xF3n lambda, qu\xE9 comparaci\xF3n realizar.</p><div class="language-java ext-java line-numbers-mode"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Guardamos el resultado en una nueva lista con los elementos ordenados</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> grupoPersonasOrdenado </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;</span><span style="color:#90A4AE;">Persona</span><span style="color:#39ADB5;">&gt;)</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#39ADB5;">          </span><span style="color:#90A4AE;font-style:italic;">// En este caso ordenamos por apellido, ascendente.</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">sorted</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">p1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p2</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> p1</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getApellidos</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">compareTo</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p2</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getApellidos</span><span style="color:#39ADB5;">()))</span></span>
<span class="line"><span style="color:#39ADB5;">          </span><span style="color:#90A4AE;font-style:italic;">// Si queremos hacerlo descendente, ponemos .sorted((e2,e1) -&gt; ......</span></span>
<span class="line"><span style="color:#39ADB5;">          </span><span style="color:#90A4AE;font-style:italic;">//.sorted((e2, e1) -&gt; e1.getValue().getApellidos().compareTo(e2.getValue().getApellidos()))</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toList</span><span style="color:#39ADB5;">());</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container info"><p class="custom-container-title">Encadenar m\xE9todos</p><p>Al final, el uso de API Stream nos permite en una misma sentencia, buscar los elementos que queramos, ordenarlos y generar una subcolecci\xF3n con los resultados.</p><p>Es lo m\xE1s parecido que vamos a encontrar a una consulta SQL para los datos de una colecci\xF3n cualquiera.</p><p>Aunque su sintaxis no es muy clara, si aprendemos a usarla correctamente, podremos realizar operaciones instant\xE1neas, sin lugar a bugs, con muy poco c\xF3digo.</p></div>`,113);function m(g,b){const l=a("DownloadPDF-component"),p=a("DocumentCover-component");return r(),c("div",null,[n(l),n(p,{titulo:"3.6 Annex II - ArrayList cheat sheet by students"}),B,D,d,E,A(`
\`\`\`puml
class Persona {
  - String nombre
  - String apellidos
  - int edad
  - double altura
  - int peso
  - String genero
  + Persona(String nombre, String apellidos, int edad, double altura, int peso, String genero)
  + String getNombre()
  + void setNombre(String nombre)
  + String getApellidos()
  + void setApellidos(String nombre)
  + int getEdad()
  + void setEdad(int edad)
  + double getAltura()
  + void setAltura(double altura)
  + int getPeso()
  + void setPeso(int peso)
  + String getGenero()
  + void setGenero(String genero)
}
\`\`\`
`),u])}const q=t(i,[["render",m],["__file","arraylist_annex.html.vue"]]);export{q as default};
