import{_ as e}from"./Collections_class_diagram.8db4bff0.js";import{_ as t,r as a,o as r,c,d as n,e as A,a as s,b as o,f as y}from"./app.40fb9969.js";const i={},B=s("h1",{id:"_3-6-annex-ii-hashmap-cheat-sheet-by-students",tabindex:"-1"},"3.6 Annex II - HashMap cheat sheet by students",-1),D=s("div",{class:"custom-container info"},[s("p",{class:"custom-container-title"},"Autor\xEDa"),s("p",null,[o("Esto es un extracto del trabajo "),s("em",null,"Reto I (Challenge I)"),o(" realizado por mis alumnos como parte del m\xF3dulo de PSP. He tomado partes de los diferentes trabajos entregados para complementar la informaci\xF3n a la que podr\xE9is acceder durante los ex\xE1menes.")]),s("p",null,"Gracias a todos.")],-1),d=s("p",null,"Para los ejemplos vamos a trabajar con la siguiente clase",-1),E=s("p",null,[s("img",{src:e,alt:"Diagrama de clases"})],-1),u=y(`<div class="pagebreak"></div><h2 id="a-definicion-y-creacion" tabindex="-1">A. Definici\xF3n y creaci\xF3n</h2><p>Una colecci\xF3n representa un grupo de objetos. Esto objetos son conocidos como elementos. Cuando queremos trabajar con un conjunto de elementos, necesitamos un almac\xE9n donde poder guardarlos. En Java, se emplea la interfaz gen\xE9rica <code>Collection</code> para este prop\xF3sito. Gracias a esta interfaz, podemos almacenar cualquier tipo de objeto y podemos usar una serie de m\xE9todos comunes, como pueden ser: a\xF1adir, eliminar, obtener el tama\xF1o de la colecci\xF3n.</p><p>Partiendo de la interfaz gen\xE9rica Collection extienden otra serie de interfaces gen\xE9ricas. Estas subinterfaces aportan distintas funcionalidades sobre la interfaz anterior.</p><p>Un HashMap b\xE1sicamente designa claves \xFAnicas para los valores correspondientes que se pueden recuperar en cualquier punto dado, es decir, nos permite almacenar elementos asociando a cada clave un valor.</p><p>Para cada clave tenemos un valor asociado. Podemos despu\xE9s buscar f\xE1cilmente un valor para una determinada clave. Las claves en el diccionario no pueden repetirse.</p><h3 id="a-1-constructores-de-hashmap" tabindex="-1">A.1. Constructores de HashMap</h3><p>HashMap proporciona 4 constructores que definen la capacidad inicial de la colecci\xF3n y en qu\xE9 momento debe redimensionarse. Son par\xE1metros para mejorar el rendimiento en el uso del HashMap.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;font-style:italic;">// Crea una instancia de HashMap con una capacidad inicial de 16 y un factor de carga de 0,75.</span></span>
<span class="line"><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Integer</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> hm1 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;&gt;();</span><span style="color:#90A4AE;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;">// HashMap(int initialCapacity). Crea una instancia de HashMap con una capacidad inicial especificada y un factor de carga de 0,75. </span></span>
<span class="line"><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Integer</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> hm1 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;&gt;(</span><span style="color:#F76D47;">10</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;">// HashMap(int initialCapacity, float loadFactor). Crea una instancia de HashMap con una capacidad inicial especificada y un factor de carga especificados. </span></span>
<span class="line"><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Integer</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> hm1 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;&gt;(</span><span style="color:#F76D47;">5</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">0.75f</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;font-style:italic;">//HashMap(Mapa de mapas) . Crea una instancia de HashMap con las mismas asignaciones que el mapa especificado. </span></span>
<span class="line"><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Integer</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> hm1 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;&gt;();</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="b-metodos-y-propiedades-generales" tabindex="-1">B. M\xE9todos y propiedades generales</h2><p>Partiendo de una serie de objetos, vamos a ver el resultado que obtendr\xEDamos con la ejecuci\xF3n de estos m\xE9todos</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p1 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Manuel</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Garc\xEDa</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">44</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.74d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">80</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Juan</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Mart\xEDnez</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">65</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.84d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">82</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="b-1-creacion-de-un-hashmap" tabindex="-1">B.1. Creaci\xF3n de un HashMap</h3><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Crear un HashMap con claves de tipo String y valores de tipo Persona</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> DNIs </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;&gt;();</span></span>
<span class="line"></span></code></pre></div><h3 id="b-2-anadir-y-eliminar-elementos" tabindex="-1">B.2. A\xF1adir y eliminar elementos</h3><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Element.put(k,v) - A\xF1ade un par clave-valor al mapa.</span></span>
<span class="line"><span style="color:#90A4AE;">  DNIs</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">put</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">390543M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Element.remove(Object key) - Removes the key and his value.</span></span>
<span class="line"><span style="color:#90A4AE;">  DNIs</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">298423Z</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;font-style:italic;">// Will remove (\u201C390543M\u201D, p1) from the map.</span></span>
<span class="line"></span></code></pre></div><div class="custom-container warning"><p class="custom-container-title">Clave ya existente</p><p>Si ya existe un elemento con la misma clave en el mapa, el m\xE9todo put reemplaza el valor existente por el nuevo. Podemos evitarlo comprobando previamente si ya existe esa clave o con el m\xE9todo <strong>DNIs.putIfAbsent(k,v)</strong>.</p></div><h3 id="b-3-comprobar-si-una-clave-o-un-valor-existen" tabindex="-1">B.3. Comprobar si una clave o un valor existen</h3><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Element.containsKey(Key) \u2013 Comprueba si existe la clave dada</span></span>
<span class="line"><span style="color:#90A4AE;">  DNIs</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">containsKey</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">390543M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Element.containsValue(Value) \u2013 Comprueba si existe el valor dado asociado a alguna clave</span></span>
<span class="line"><span style="color:#90A4AE;">  DNIs</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">containsValue</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p2</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="b-4-acceder-a-las-partes-del-mapa" tabindex="-1">B.4. Acceder a las partes del mapa</h3><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Element.keySet() - Obtiene el conjunto de claves del mapa</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Set</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> claves </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> DNIs</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">keySet</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Element.values() - Obtiene el conjunto de valores almacenados en el mapa</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Collection</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> valores </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> DNIs</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">values</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Element.entrySet() - Obtiene el conjunto de pares clave-valor del mapa</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Set</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Entry</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;&gt;</span><span style="color:#90A4AE;"> tuplas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> DNIs</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">entrySet</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span></code></pre></div><h3 id="b-5-acceder-a-un-elemento-del-mapa" tabindex="-1">B.5. Acceder a un elemento del mapa</h3><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Element.get(Key) - Obtiene el valor asociado a la clave</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> DNIs</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">get</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">390543</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">)</span></span>
<span class="line"></span></code></pre></div><h3 id="b-6-otras-funciones-de-utilidad" tabindex="-1">B.6. Otras funciones de utilidad</h3><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Element.size() - Devuelve el n\xFAmero de elementos en el mapa</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">int</span><span style="color:#90A4AE;"> size </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> DNIs</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">size</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">//Element.clear() - Elimina todas las asignaciones y vac\xEDa el mapa</span></span>
<span class="line"><span style="color:#90A4AE;">  DNIs</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">clear</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="c-anadir-datos-a-un-hashmap" tabindex="-1">C. A\xF1adir datos a un HashMap</h2><div class="custom-container info"><p class="custom-container-title">Orden de los elementos en el HashMap</p><p>Cuando a\xF1adimos elementos a una HashMap, el orden de inserci\xF3n no se conserva. Internamente, para cada elemento, se genera un hash separado y los elementos se indexan en funci\xF3n de este hash para hacerlo m\xE1s eficiente. Antes de a\xF1adir un elemento, como se ha avisado antes, es recomendable comprobar si ya existe para no sustituirlo</p></div><h3 id="c-1-anadir-elementos-desde-el-constructor" tabindex="-1">C.1. A\xF1adir elementos desde el constructor</h3><p>A la hora de crear el Hashmap, podemos a\xF1adirle datos, usando la sintaxis del doble corchete o bien con la construcci\xF3n Map.of</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Crea un nuevo mapa y a la vez lo inicializa con valores  </span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> map1 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;&gt;()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#6182B8;">put</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">390543M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#6182B8;">put</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">298423Z</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p2</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}};</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// En este caso indicamos los pares clave valor como si de un array se tratase</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// De esta forma podemos a\xF1adir hasta un m\xE1ximo de 10 elementos</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> map2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;&gt;(</span></span>
<span class="line"><span style="color:#90A4AE;">    Map</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">of</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">390543M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">298423Z</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p2</span><span style="color:#39ADB5;">)</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="c-2-anadir-elementos-desde-otras-colecciones" tabindex="-1">C.2. A\xF1adir elementos desde otras colecciones</h3><p>Al ser una colecci\xF3n compuesta por una clave y un valor, la inicializaci\xF3n se limita a los tipos de colecciones que tienen una estructura similar.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Partiendo del c\xF3digo anterior, creamos un nuevo mapa a partir de map2</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> map3 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;&gt;(</span><span style="color:#90A4AE;">map2</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// O bien copiando todos los pares clave-valor</span></span>
<span class="line"><span style="color:#90A4AE;">  map3</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">putAll</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">map2</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">  </span></span>
<span class="line"></span></code></pre></div><h3 id="c-3-anadir-eliminar-elementos-desde-codigo" tabindex="-1">C.3. A\xF1adir / eliminar elementos desde c\xF3digo</h3><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// A\xF1adir y si existe la clave reemplazarlo</span></span>
<span class="line"><span style="color:#90A4AE;">  DNIs</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">put</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">390543M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// A\xF1adir s\xF3lo si la clave no existe</span></span>
<span class="line"><span style="color:#90A4AE;">  DNIs</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">putIfAbsent</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">390543M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p1</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Eliminar un elemento. Si la clave existe devuelve el valor asociado, si no devuelve null</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> eliminada </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> map3</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">390543M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Eliminar un par clave-valor. Si existe la tupla, la elimina y devuelve true, si no devuelve false</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">boolean</span><span style="color:#90A4AE;"> existe </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> map3</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">390543M</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> p1</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">  </span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="d-recorrer-la-coleccion" tabindex="-1">D. Recorrer la colecci\xF3n</h2><p>Vamos a preparar un HashMap para recorrerlo y usarlo en los siguientes apartados</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// HashMap creation</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> grupoPersonas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;&gt;()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{{</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#6182B8;">put</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">12345678A</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre1</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido1</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">35</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.66d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">71</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Mujer</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#6182B8;">put</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">23456789B</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre2</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido2</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">40</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.84d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">88</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Mujer</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#6182B8;">put</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">34567890C</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre3</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido3</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">52</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.70d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">66</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#6182B8;">put</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">45678901D</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre4</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido4</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">23</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.96d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">98</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Mujer</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#6182B8;">put</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">56789012E</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre5</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido5</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">16</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.55d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">60</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">          </span><span style="color:#6182B8;">put</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">67890123F</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">Persona</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Nombre6</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Apellido6</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">20</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">1.75d</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">74</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Hombre</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}};</span></span>
<span class="line"></span></code></pre></div><div class="custom-container info"><p class="custom-container-title">Tipos de valores</p><p>Vamos a mostrar ejemplos de c\xF3mo recorrer cada uno de los elementos que componen el HashMap, claves, valores y pares clave-valor.</p><p>.entrySet() - devuelve el conjunto de pares clave-valor</p><p>.keySet() - devuelve el conjunto de claves</p><p>.values() - devuelve la colecci\xF3n de valores</p></div><h3 id="d-1-usando-un-bucle-for" tabindex="-1">D.1. Usando un bucle for</h3><p>Con el bucle for iteramos de forma natural accediendo a los elementos por \xEDndice, por lo que vamos a necesitar una forma de obtener el \xEDndice (i) de cada elemento para recorrer el HashMap.</p><p>En este caso, vamos a usar el \xEDndice de la clave, a trav\xE9s del m\xE9todo toArray.</p><div class="custom-container warning"><p class="custom-container-title">Orden de los elementos en el HashMap</p><p>Es importante recordar y tener en cuenta que los elementos en un HashMap se ordenan autom\xE1ticamente en base a una funci\xF3n Hash (resumen) que permite realizar una b\xFAsqueda muy r\xE1pida sobre la clave. Por lo tanto, no podemos esperar que el recorrido por \xEDndice coincida con el orden en el que los elementos se a\xF1aden al mapa.</p></div><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">int</span><span style="color:#90A4AE;"> i </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">0</span><span style="color:#39ADB5;">;</span><span style="color:#90A4AE;"> i </span><span style="color:#39ADB5;">&lt;</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">size</span><span style="color:#39ADB5;">();</span><span style="color:#90A4AE;"> i</span><span style="color:#39ADB5;">++)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">get</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">map</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">keySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">toArray</span><span style="color:#39ADB5;">()[</span><span style="color:#90A4AE;">i</span><span style="color:#39ADB5;">]));</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="d-2-usando-un-bucle-foreach-de-java" tabindex="-1">D.2. Usando un bucle foreach de Java</h3><p>Otra forma de recorrer el HashMap es con un bucle similar al foreach de C#, aunque con el formato de un bucle for, pero en este caso indicando for(elemento : colecci\xF3n)</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Recorremos la estructura obteniendo la tupla (k,v) en cada iteraci\xF3n</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Map</span><span style="color:#39ADB5;">.</span><span style="color:#9C3EDA;">Entry</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> entry </span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">entrySet</span><span style="color:#39ADB5;">())</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">        System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Key: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> entry</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getKey</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">, Value: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> entry</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getValue</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><p>o bien para ir mostrando las claves</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">String</span><span style="color:#90A4AE;"> key </span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">keySet</span><span style="color:#39ADB5;">())</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">DNI = </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> key</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><p>o los valores</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Person</span><span style="color:#90A4AE;"> value </span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">values</span><span style="color:#39ADB5;">())</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Value = </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> value</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="d-3-usando-iterator" tabindex="-1">D.3. Usando Iterator</h3><p>El interface Iterator de Java permite movernos por una colecci\xF3n y acceder a sus elementos</p><div class="custom-container info"><p class="custom-container-title">java.lang.Iterator</p><p>Todas las colecciones de Java incluyen un m\xE9todo iterator() que devuelve una instancia de Iterator para recorrer la colecci\xF3n.</p><p>Iterator tiene 4 m\xE9todos:</p><ul><li><strong>hasNext()</strong> - devuelve true si hay un elemento m\xE1s en la lista</li><li><strong>next()</strong> - devuelve el siguiente elemento de la lista</li><li><strong>remove()</strong> - elimina el \xFAltimo elemento de la lista que hemos obtenido con next()</li><li><strong>forEachRemaining()</strong> - realiza la acci\xF3n indicada con cada uno de los elementos que quedan por recorrer de la lista</li></ul></div><p>Vamos a ver un ejemplo con los valores de la colecci\xF3n</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Iterator</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> iterator </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">values</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">iterator</span><span style="color:#39ADB5;">();</span><span style="color:#90A4AE;">  </span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">while</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">iterator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">hasNext</span><span style="color:#39ADB5;">())</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">iterator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">next</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="d-4-usando-el-metodo-foreach-con-expresiones-lambda" tabindex="-1">D.4. Usando el m\xE9todo forEach con expresiones lambda</h3><p>En este caso aprovechamos el m\xE9todo foreach de las colecciones para poder realizar una acci\xF3n concreta sobre cada uno de los elementos de la misma</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Pares (clave,valor)</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">k</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;">v</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Clave: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> k </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">, Values: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> v</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Claves</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">keySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">k </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Clave: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> k</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Valores</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">values</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">v </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Values: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> v</span><span style="color:#39ADB5;">));</span></span>
<span class="line"></span></code></pre></div><h3 id="d-5-eliminando-modificando-elementos-mientras-se-itera-sobre-la-coleccion" tabindex="-1">D.5 Eliminando / Modificando elementos mientras se itera sobre la colecci\xF3n</h3><p>Mientras se est\xE1 recorriendo una colecci\xF3n, no con todos los tipos de bucles se puede modificar (a\xF1adir/eliminar elementos) de la colecci\xF3n. Vamos a ver el comportamiento de cada uno de ellos.</p><h4 id="d-5-1-con-un-bucle-for" tabindex="-1">D.5.1 Con un bucle for</h4><p>En este caso no tendr\xEDamos problemas. Al acceder por \xEDndice, podemos a\xF1adir o eliminar elementos mientras se recorre la colecci\xF3n.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">int</span><span style="color:#90A4AE;"> i </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#F76D47;">0</span><span style="color:#39ADB5;">;</span><span style="color:#90A4AE;"> i </span><span style="color:#39ADB5;">&lt;</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">size</span><span style="color:#39ADB5;">();</span><span style="color:#90A4AE;"> i</span><span style="color:#39ADB5;">++)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">keySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">toArray</span><span style="color:#39ADB5;">()[</span><span style="color:#90A4AE;">i</span><span style="color:#39ADB5;">].</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">23456789B</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">entrySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">toArray</span><span style="color:#39ADB5;">()[</span><span style="color:#90A4AE;">i</span><span style="color:#39ADB5;">]);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="d-5-2-con-un-bucle-foreach-de-java" tabindex="-1">D.5.2 Con un bucle foreach de Java</h4><div class="custom-container danger"><p class="custom-container-title">No modificable mientras se recorre</p><p>Si intentamos eliminar un elemento mientras lo recorremos con foreach, provocaremos una <code>java.util.ConcurrentModificationException</code>. Por lo tanto, s\xF3lo debemos usar este bucle si queremos leer sus elementos sin modificar la estructura de la colecci\xF3n.</p></div><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Map</span><span style="color:#39ADB5;">.</span><span style="color:#9C3EDA;">Entry</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">entrySet</span><span style="color:#39ADB5;">())</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getKey</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">34567890C</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      personas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getKey</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">    System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Clave: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getKey</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;"> Valor: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getValue</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">toString</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="d-5-3-con-iterator" tabindex="-1">D.5.3 Con Iterator</h4><p>Si usamos el m\xE9todo remove para eliminar elementos de la colecci\xF3n mientras la recorremos, podremos hacerlo sin que se genere ninguna excepci\xF3n.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Iterator</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Entry</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;&gt;</span><span style="color:#90A4AE;"> iterator </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">entrySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">iterator</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">while</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">iterator </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">hasNext</span><span style="color:#39ADB5;">())</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#9C3EDA;">Map</span><span style="color:#39ADB5;">.</span><span style="color:#9C3EDA;">Entry</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Map</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">Entry</span><span style="color:#39ADB5;">&lt;</span><span style="color:#90A4AE;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> Persona</span><span style="color:#39ADB5;">&gt;)</span><span style="color:#90A4AE;"> iterator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">next</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getKey</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">12345678A</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#39ADB5;">      </span><span style="color:#90A4AE;font-style:italic;">// Si borramos usando iterator.remove o el m\xE9todo remove(key) de HashMap, funciona</span></span>
<span class="line"><span style="color:#90A4AE;">      iterator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line">\xA0</div><br><br><br></div></div><h4 id="d-5-4-con-el-metodo-foreach-y-expresiones-lambda" tabindex="-1">D.5.4 Con el m\xE9todo forEach y expresiones lambda</h4><div class="custom-container danger"><p class="custom-container-title">No modificable mientras se recorre</p><p>Si intentamos eliminar un elemento mientras lo recorremos con foreach, provocaremos una <code>java.util.ConcurrentModificationException</code>. Por lo tanto, s\xF3lo debemos usar este bucle si queremos leer sus elementos sin modificar la estructura de la colecci\xF3n.</p></div><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Elimina si encuentra un elemento concreto</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">keySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">k</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">k</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">34567890C</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">remove</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">k</span><span style="color:#39ADB5;">);});</span></span>
<span class="line"></span></code></pre></div><p>Otra cosa es que intentemos hacer cambios en los valores de la colecci\xF3n, por ejemplo, intercambiar los apellidos</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Intercambia los apellidos de todas las personas</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">values</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#9C3EDA;">String</span><span style="color:#90A4AE;"> aux </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getApellidos</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">      p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">setApellidos</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#90A4AE;">      p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">setNombre</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">aux</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">                </span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="e-busqueda-de-elementos" tabindex="-1">E. B\xFAsqueda de elementos</h2><p>Para buscar elementos en un HashMap hay distintas formas de hacerlo. Desde los propios m\xE9todos que nos ofrece la clase hasta el uso de API Stream. Vamos a describir cada uno de ellos</p><h3 id="e-1-busqueda-por-clave-o-usando-los-metodos-de-la-clase" tabindex="-1">E.1. B\xFAsqueda por clave o usando los m\xE9todos de la clase</h3><p>La clase HashMap nos ofrece diferentes alternativas para buscar y/o saber si un elemento est\xE1 presente en la colecci\xF3n. As\xED, podemos usar los m\xE9todos</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// A partir de una clave, obtener el valor</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">get</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">34567890C</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// O simplemente comprobar si existe esa clave o ese valor antes de buscarlo</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">containsKey</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">34567890C</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">containsValue</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">person</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span></code></pre></div><h3 id="e-2-busqueda-por-el-valor-de-una-propiedad" tabindex="-1">E.2. B\xFAsqueda por el valor de una propiedad</h3><p>A diferencia del caso anterior, si queremos buscar un objeto que contenga un valor concreto en un campo, debemos recorrer la colecci\xF3n hasta encontrarlo. Para eso, una de las alternativas es usar alguno de los bucles vistos anteriormente.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Puede haber m\xE1s de un elemento que cumpla el criterio de b\xFAsqueda</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Iterator</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Map</span><span style="color:#39ADB5;">.</span><span style="color:#9C3EDA;">Entry</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;&gt;</span><span style="color:#90A4AE;"> it </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">entrySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">iterator</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">while</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">it</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">hasNext</span><span style="color:#39ADB5;">())</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#9C3EDA;">Map</span><span style="color:#39ADB5;">.</span><span style="color:#9C3EDA;">Entry</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> entry </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> it</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">next</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(((</span><span style="color:#90A4AE;">Persona</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;">entry</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getValue</span><span style="color:#39ADB5;">()).</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Jorge</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#39ADB5;">      </span><span style="color:#90A4AE;font-style:italic;">// Se puede obtener el elemento o bien modificarlo</span></span>
<span class="line"><span style="color:#90A4AE;">      System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Key: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> entry</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getKey</span><span style="color:#39ADB5;">()</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">, Value: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span></span>
<span class="line"><span style="color:#90A4AE;">      entry</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getValue</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">break</span><span style="color:#39ADB5;">;</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="e-3-busqueda-usando-expresiones-lambda" tabindex="-1">E.3. B\xFAsqueda usando expresiones lambda</h3><p>Mediante expresiones lambda, podemos incluir una condicional que nos haga el filtrado de elementos que deseemos</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Puede haber m\xE1s de un elemento que cumpla el criterio de b\xFAsqueda</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">k</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> v</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">v</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getNombre</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Jorge</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#39ADB5;">      </span><span style="color:#90A4AE;font-style:italic;">// Se puede obtener el elemento o bien modificarlo</span></span>
<span class="line"><span style="color:#90A4AE;">      System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Key: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> k </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">, Value: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;"> v</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="e-4-busqueda-usando-api-stream" tabindex="-1">E.4. B\xFAsqueda usando API Stream</h3><p>En este tipo de acciones es donde ya podemos empezar a ver la potencia que ofrece el API Stream para el manejo y gesti\xF3n de las colecciones. Podemos emplear varios m\xE9todos, como filter, findAny, findFirst, allMatch, anyMatch, count, distinct. Como veremos en el siguiente apartado, esos resultados los podemos guardar en forma de subcolecci\xF3n</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Puede haber m\xE1s de un elemento que cumpla el criterio de b\xFAsqueda</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Obtener un submapa con los elementos que cumplan el criterio</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">entrySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">k </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> k</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getKey</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">abc</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toMap</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Map</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">Entry</span><span style="color:#39ADB5;font-style:italic;">::</span><span style="color:#90A4AE;">getKey</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> Map</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">Entry</span><span style="color:#39ADB5;font-style:italic;">::</span><span style="color:#90A4AE;">getValue</span><span style="color:#39ADB5;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// O bien recorrer la lista de entradas obtenidas</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Entry</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">entrySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">k </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> k</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getKey</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">abc</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toList</span><span style="color:#39ADB5;">()))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">          System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getValue</span><span style="color:#39ADB5;">());</span><span style="color:#90A4AE;">   </span><span style="color:#90A4AE;font-style:italic;">// Sacamos el valor de la tupla &lt;clave,valor&gt;</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Persona</span><span style="color:#90A4AE;"> p </span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">entrySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">k</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> k</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getKey</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">98761234D</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">map</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Map</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">Entry</span><span style="color:#39ADB5;font-style:italic;">::</span><span style="color:#90A4AE;">getValue</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;">         </span><span style="color:#90A4AE;font-style:italic;">// Cogemos s\xF3lo los valores del entryMap</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toList</span><span style="color:#39ADB5;">()))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">          System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">p</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">        </span><span style="color:#90A4AE;font-style:italic;">// Muestra solo la persona</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Saber cu\xE1ntos cumplen el criterio de b\xFAsqueda</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">entrySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">k </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> k</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getKey</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">abc</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">)).</span><span style="color:#6182B8;">count</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Obtener el primero que cumpla el criterio, si es que hay alguno</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Optional</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Entry</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;&gt;</span><span style="color:#90A4AE;"> s </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">entrySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">k </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> k</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getKey</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">equals</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">6780123F</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">findFirst</span><span style="color:#39ADB5;">();</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="f-obtencion-de-subcolecciones" tabindex="-1">F. Obtenci\xF3n de subcolecciones</h2><p>Lo podemos considerar un tipo especial de b\xFAsqueda en el que el objetivo es conseguir una colecci\xF3n con los elementos que cumplan un determinado criterio.</p><p>As\xED, la forma de buscar es id\xE9ntica a la del apartado anterior, pero en este caso lo que obtendremos de esa b\xFAsqueda ser\xE1 un nuevo tipo de colecci\xF3n, no necesariamente otro HashMap.</p><h3 id="f-1-subcolecciones-usando-bucles" tabindex="-1">F.1. Subcolecciones usando bucles</h3><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Personas cuyo DNI acaba en &quot;F&quot;</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> personas2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;();</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">for</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Entry</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> e </span><span style="color:#39ADB5;font-style:italic;">:</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">entrySet</span><span style="color:#39ADB5;">())</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">e</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getKey</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">endsWith</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">F</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      personas2</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">put</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">e</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getKey</span><span style="color:#39ADB5;">(),</span><span style="color:#90A4AE;"> e</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getValue</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="f-2-subcolecciones-usando-expresiones-lambda" tabindex="-1">F.2. Subcolecciones usando expresiones lambda</h3><p>En este ejemplo obtenemos un nuevo HashMap, pero tambi\xE9n podr\xEDamos guardar la informaci\xF3n en un ArrayList o en cualquier otro tipo de estructura.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Personas cuyo DNI acaba en &quot;F&quot;</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> grupoPersonas2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;();</span></span>
<span class="line"><span style="color:#90A4AE;">  grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">forEach</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">k</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> v</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;font-style:italic;">if</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">k</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">endsWith</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">F</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">      grupoPersonas2</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">put</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">k</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> v</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">});</span></span>
<span class="line"></span></code></pre></div><h3 id="f-3-subcolecciones-usando-api-stream" tabindex="-1">F.3. Subcolecciones usando API Stream</h3><p>Podemos obtener diferentes tipos de subcolecciones. Con API Stream podemos filtrar, hacer subconjuntos y guardar el resultado usando diferentes formas de .collect, que dar\xE1n como resultados distintos tipos de colecciones.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// HashMap de Personas cuyo DNI acaba en &quot;F&quot;</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> grupoPersonas3 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">HashMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#90A4AE;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> Persona</span><span style="color:#39ADB5;">&gt;)</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">entrySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">x </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> x</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getKey</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">endsWith</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">F</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toMap</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Map</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">Entry</span><span style="color:#39ADB5;font-style:italic;">::</span><span style="color:#90A4AE;">getKey</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> Map</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">Entry</span><span style="color:#39ADB5;font-style:italic;">::</span><span style="color:#90A4AE;">getValue</span><span style="color:#39ADB5;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Lista de Personas cuyo DNI acaba en &quot;F&quot;</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">List</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> listaPersonas3 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">List</span><span style="color:#39ADB5;">&lt;</span><span style="color:#90A4AE;">Persona</span><span style="color:#39ADB5;">&gt;)</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">entrySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">filter</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">x </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> x</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getKey</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">endsWith</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">F</span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">))</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toList</span><span style="color:#39ADB5;">());</span></span>
<span class="line"></span></code></pre></div><div class="pagebreak"></div><h2 id="g-ordenacion-de-elementos" tabindex="-1">G. Ordenaci\xF3n de elementos</h2><div class="custom-container danger"><p class="custom-container-title">HashMap no garantiza el orden de los elementos</p><p>Como ya hemos comentado anteriormente, un HashMap es una estructura de datos en la que el orden de los elementos no est\xE1 garantizado. Es por eso que si queremos mantener una copia ordenada de los elementos, deberemos recurrir a otros tipos de colecciones que s\xED garantizan el orden.</p></div><h3 id="g-1-ordenar-por-clave" tabindex="-1">G.1. Ordenar por clave</h3><p>Hay un tipo especial de map, TreeMap, en el que los elementos se ordenan siguiendo el orden natural de las claves. Por lo tanto es la opci\xF3n ideal si queremos tener los elementos ordenados por clave.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// As\xED podemos recorrer el TreeMap y mostrar los elementos ordenados por clave</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">TreeMap</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> grupoPersonasOrdenado </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">TreeMap</span><span style="color:#39ADB5;">&lt;&gt;(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#90A4AE;"> </span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Iterator</span><span style="color:#90A4AE;"> it</span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;">grupoPersonasOrdenado</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">keySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">iterator</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;font-style:italic;">while</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">it</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">hasNext</span><span style="color:#39ADB5;">())</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">{</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#9C3EDA;">int</span><span style="color:#90A4AE;"> key</span><span style="color:#39ADB5;">=(</span><span style="color:#9C3EDA;">int</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;">itr</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">next</span><span style="color:#39ADB5;">();</span></span>
<span class="line"><span style="color:#90A4AE;">    System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;">Key: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;">key</span><span style="color:#39ADB5;">+</span><span style="color:#39ADB5;">&quot;</span><span style="color:#91B859;"> Element: </span><span style="color:#39ADB5;">&quot;</span><span style="color:#39ADB5;">+</span><span style="color:#90A4AE;">hashMap</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">get</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">key</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="g-2-ordenar-usando-metodos-de-collection" tabindex="-1">G.2. Ordenar usando m\xE9todos de Collection</h3><p>Si lo que queremos es tener el conjunto de claves o valores ordenados por separado, la forma m\xE1s f\xE1cil es obtener una lista y ordenarla usando el m\xE9todo sort() de Collection.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Para las claves</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">List</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> clavesGrupoPersonas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">keySet</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#90A4AE;">  Collections</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">sort</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">clavesGrupoPersonas</span><span style="color:#39ADB5;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Para los valores</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">List</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> valoresGrupoPersonas </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">values</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Ordena seg\xFAn el m\xE9todo compareTo sobrescrito al implementar el interfaz Comparable</span></span>
<span class="line"><span style="color:#90A4AE;">  Collections</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">sort</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">valoresGrupoPersonas</span><span style="color:#39ADB5;">);</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Ordena por un campo cualquiera que indiquemos</span></span>
<span class="line"><span style="color:#90A4AE;">  Collections</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">sort</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">valoresGrupoPersonas</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> Comparator</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">comparing</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Persona</span><span style="color:#39ADB5;font-style:italic;">::</span><span style="color:#90A4AE;">getApellidos</span><span style="color:#39ADB5;">));</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Con Comparator tenemos disponibles varios comparadores (naturalOrder, reverseOrder, nullsFirst, ....)</span></span>
<span class="line"></span></code></pre></div><div class="custom-container info"><p class="custom-container-title">Interfaz Comparable</p><p>Para que la primera forma de sort funcione, la clase Persona debe implementar el interfaz Comparable y sobrescribir su m\xE9todo <code>compareTo</code> para definir la forma de ordenar los objetos de tipo Persona.</p><p>Veremos m\xE1s adelante que tenemos formas de definir el comparador usando expresiones lambda o APi Stream, permitiendo mayor flexibilidad a la hora de comparar elementos.</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Un ejemplo, si queremos ordenar a las personas por edad</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">@</span><span style="color:#9C3EDA;">Override</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#9C3EDA;">public</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">int</span><span style="color:#90A4AE;"> </span><span style="color:#6182B8;">compareTo</span><span style="color:#39ADB5;">(</span><span style="color:#9C3EDA;">Object</span><span style="color:#90A4AE;"> o</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">{</span><span style="color:#90A4AE;">        </span></span>
<span class="line"><span style="color:#90A4AE;">        </span><span style="color:#39ADB5;font-style:italic;">return</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">Integer</span><span style="color:#39ADB5;">)this.</span><span style="color:#6182B8;">getEdad</span><span style="color:#39ADB5;">()).</span><span style="color:#6182B8;">compareTo</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">Integer</span><span style="color:#39ADB5;">)((</span><span style="color:#90A4AE;">Persona</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;">o</span><span style="color:#39ADB5;">).</span><span style="color:#6182B8;">getEdad</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#90A4AE;">    </span><span style="color:#39ADB5;">}</span></span>
<span class="line"></span></code></pre></div></div><h3 id="g-3-ordenar-con-expresiones-lambda" tabindex="-1">G.3. Ordenar con expresiones lambda</h3><p>Si usamos una lista, no es necesario implementar el interfaz Comparable, ya que podemos indicar la comparaci\xF3n que queremos hacer como par\xE1metro del m\xE9todo sort</p><div class="language-java ext-java"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Para los valores</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">List</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> valoresGrupoPersonas2 </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;font-style:italic;">new</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">ArrayList</span><span style="color:#39ADB5;">&lt;&gt;(</span><span style="color:#90A4AE;">grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">values</span><span style="color:#39ADB5;">());</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Indicamos la comparaci\xF3n que queremos hacer. Podemos usar compareTo o definir</span></span>
<span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// nuestro propio comparador</span></span>
<span class="line"><span style="color:#90A4AE;">  Collections</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">sort</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">valoresGrupoPersonas2</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">e1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> e2</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">Integer</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;">e1</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getEdad</span><span style="color:#39ADB5;">()).</span><span style="color:#6182B8;">compareTo</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">e2</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getEdad</span><span style="color:#39ADB5;">()));</span></span>
<span class="line"><span style="color:#90A4AE;">  System</span><span style="color:#39ADB5;">.</span><span style="color:#90A4AE;">out</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">println</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">valoresGrupoPersonas2</span><span style="color:#39ADB5;">);</span><span style="color:#90A4AE;">      </span></span>
<span class="line"></span></code></pre></div><h3 id="g-4-ordenar-con-api-stream" tabindex="-1">G.4. Ordenar con API Stream</h3><p>Con API Stream usamos tambi\xE9n el m\xE9todo sorted para indicar qu\xE9 comparaci\xF3n se debe realizar. Tenemos varias opciones en funci\xF3n del tipo de dato que pasemos.</p><p>Como en el caso anterior, el m\xE1s flexible es aquel en el que indicamos, mediante una expresi\xF3n lambda qu\xE9 comparaci\xF3n realizar.</p><div class="language-java ext-java line-numbers-mode"><pre class="shiki" style="background-color:#FAFAFA;"><code><span class="line"><span style="color:#39ADB5;">  </span><span style="color:#90A4AE;font-style:italic;">// Guardamos el resultado en un LinkedHashMap que s\xED garantiza el orden</span></span>
<span class="line"><span style="color:#90A4AE;">  </span><span style="color:#9C3EDA;">Map</span><span style="color:#39ADB5;">&lt;</span><span style="color:#9C3EDA;">String</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">Persona</span><span style="color:#39ADB5;">&gt;</span><span style="color:#90A4AE;"> sortedMap </span><span style="color:#39ADB5;">=</span><span style="color:#90A4AE;"> grupoPersonas</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">entrySet</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">stream</span><span style="color:#39ADB5;">()</span></span>
<span class="line"><span style="color:#39ADB5;">      </span><span style="color:#90A4AE;font-style:italic;">// En este caso ordenamos por apellido, ascendente.</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">sorted</span><span style="color:#39ADB5;">((</span><span style="color:#90A4AE;">e1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> e2</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> e1</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getValue</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">getApellidos</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">compareTo</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">e2</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">getValue</span><span style="color:#39ADB5;">().</span><span style="color:#6182B8;">getApellidos</span><span style="color:#39ADB5;">()))</span></span>
<span class="line"><span style="color:#39ADB5;">      </span><span style="color:#90A4AE;font-style:italic;">// Si queremos hacerlo descendente, ponemos .sorted((e2,e1) -&gt; ......</span></span>
<span class="line"><span style="color:#39ADB5;">      </span><span style="color:#90A4AE;font-style:italic;">//.sorted((e2, e1) -&gt; e1.getValue().getApellidos().compareTo(e2.getValue().getApellidos()))</span></span>
<span class="line"><span style="color:#90A4AE;">      </span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">collect</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Collectors</span><span style="color:#39ADB5;">.</span><span style="color:#6182B8;">toMap</span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">Entry</span><span style="color:#39ADB5;font-style:italic;">::</span><span style="color:#90A4AE;">getKey</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> Entry</span><span style="color:#39ADB5;font-style:italic;">::</span><span style="color:#90A4AE;">getValue</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> </span><span style="color:#39ADB5;">(</span><span style="color:#90A4AE;">e1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> e2</span><span style="color:#39ADB5;">)</span><span style="color:#90A4AE;"> </span><span style="color:#9C3EDA;">-&gt;</span><span style="color:#90A4AE;"> e1</span><span style="color:#39ADB5;">,</span><span style="color:#90A4AE;"> LinkedHashMap</span><span style="color:#39ADB5;font-style:italic;">::new</span><span style="color:#39ADB5;">));</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container info"><p class="custom-container-title">Encadenar m\xE9todos</p><p>Al final, el uso de API Stream nos permite en una misma sentencia, buscar los elementos que queramos, ordenarlos y generar una subcolecci\xF3n con los resultados.</p><p>Es lo m\xE1s parecido que vamos a encontrar a una consulta SQL para los datos de una colecci\xF3n cualquiera.</p><p>Aunque su sintaxis no es muy clara, si aprendemos a usarla correctamente, podremos realizar operaciones instant\xE1neas, sin lugar a bugs, con muy poco c\xF3digo.</p></div>`,123);function m(g,v){const l=a("DownloadPDF-component"),p=a("DocumentCover-component");return r(),c("div",null,[n(l),n(p,{titulo:"3.6 Annex II - HashMap cheat sheet by students"}),B,D,d,E,A(`
\`\`\`puml
class Persona {
  - String nombre
  - String apellidos
  - int edad
  - double altura
  - int peso
  - String genero
  + Persona(String nombre, String apellidos, int edad, double altura, int peso, String genero)
  + String getNombre()
  + void setNombre(String nombre)
  + String getApellidos()
  + void setApellidos(String nombre)
  + int getEdad()
  + void setEdad(int edad)
  + double getAltura()
  + void setAltura(double altura)
  + int getPeso()
  + void setPeso(int peso)
  + String getGenero()
  + void setGenero(String genero)
}
\`\`\`
`),u])}const h=t(i,[["render",m],["__file","hashmap_annex.html.vue"]]);export{h as default};
